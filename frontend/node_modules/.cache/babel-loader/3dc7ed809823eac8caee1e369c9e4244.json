{"remainingRequest":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/eslint-loader/index.js??ref--14-0!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/api.js","dependencies":[{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/api.js","mtime":1754556834957},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/package.json","mtime":1754527202542},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1754379194500},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js","mtime":1754379194406},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/eslint-loader/index.js","mtime":1754379195590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gc3JjL2FwaS5qcwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpjb25zdCBBUElfQkFTRSA9ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpJzsKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFuYWx5emVQbGFudChzcGVjaWVzLCBwbGFudElkLCBkYXRlKSB7CiAgY29uc3QgdXJsID0gYCR7QVBJX0JBU0V9L2FuYWx5emUtcGxhbnQvJHtzcGVjaWVzfS8ke3BsYW50SWR9P2RhdGU9JHtkYXRlfWA7CiAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucG9zdCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UGxhbnRSZXN1bHRzKHNwZWNpZXMsIHBsYW50SWQsIGRhdGUpIHsKICBjb25zdCB1cmwgPSBgJHtBUElfQkFTRX0vcGxhbnQtcmVzdWx0cy8ke3NwZWNpZXN9LyR7cGxhbnRJZH0/ZGF0ZT0ke2RhdGV9YDsKICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQodXJsKTsKICByZXR1cm4gcmVzLmRhdGE7Cn0KCi8vIFRpbWVsaW5lIEFQSSBmdW5jdGlvbnMKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFBsYW50VGltZWxpbmUoc3BlY2llcywgcGxhbnRJZCkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC10aW1lbGluZS8ke3NwZWNpZXN9LyR7cGxhbnRJZH1gOwogIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VmVnZXRhdGlvblRpbWVsaW5lKHNwZWNpZXMsIHBsYW50SWQsIGluZGV4VHlwZSkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC10aW1lbGluZS8ke3NwZWNpZXN9LyR7cGxhbnRJZH0vdmVnZXRhdGlvbi8ke2luZGV4VHlwZX1gOwogIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VGV4dHVyZVRpbWVsaW5lKHNwZWNpZXMsIHBsYW50SWQsIGJhbmROYW1lLCB0ZXh0dXJlVHlwZSkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC10aW1lbGluZS8ke3NwZWNpZXN9LyR7cGxhbnRJZH0vdGV4dHVyZS8ke2JhbmROYW1lfS8ke3RleHR1cmVUeXBlfWA7CiAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KHVybCk7CiAgcmV0dXJuIHJlcy5kYXRhOwp9CmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREYXRhYmFzZURhdGEoc3BlY2llcywgcGxhbnRJZCwgZGF0ZSkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC1kYXRhYmFzZS1kYXRhLyR7c3BlY2llc30vJHtwbGFudElkfT9kYXRlPSR7ZGF0ZX1gOwogIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQoKLyoqCiAqIFVwbG9hZCBmaWxlcyB0byB0aGUgYmFja2VuZCAocmF3IG9yIHJlc3VsdCkuCiAqIEBwYXJhbSB7RmlsZUxpc3R8QXJyYXk8RmlsZT59IGZpbGVzIC0gVGhlIGZpbGVzIHRvIHVwbG9hZC4KICogQHBhcmFtIHtzdHJpbmd9IGVuZHBvaW50IC0gJ3Jhdy1maWxlcycgb3IgJ3Jlc3VsdC1maWxlcycKICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gLSBUaGUgcmVzcG9uc2UgZnJvbSB0aGUgYmFja2VuZC4KICovCmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGxvYWRGaWxlcyhmaWxlcywgZW5kcG9pbnQgPSAicmF3LWZpbGVzIikgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS91cGxvYWQvJHtlbmRwb2ludH1gOwogIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CgogIC8vIEFwcGVuZCBlYWNoIGZpbGUgdG8gdGhlIGZvcm0gZGF0YQogIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHsKICAgIGZvcm1EYXRhLmFwcGVuZCgiZmlsZXMiLCBmaWxlc1tpXSwgZmlsZXNbaV0ud2Via2l0UmVsYXRpdmVQYXRoIHx8IGZpbGVzW2ldLm5hbWUpOwogIH0KICB0cnkgewogICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHsKICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgIGJvZHk6IGZvcm1EYXRhCiAgICB9KTsKICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5kZXRhaWwgfHwgIlVwbG9hZCBmYWlsZWQiKTsKICAgIH0KICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgfSBjYXRjaCAoZXJyKSB7CiAgICAvLyBZb3UgY2FuIGhhbmRsZSBlcnJvciBkaXNwbGF5IGhlcmUgb3IgaW4geW91ciBWdWUgY29tcG9uZW50CiAgICB0aHJvdyBlcnI7CiAgfQp9CmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRVcGxvYWRTdGF0dXMoKSB7CiAgY29uc3QgdXJsID0gYCR7QVBJX0JBU0V9L3VwbG9hZC9zdGF0dXNgOwogIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTsKICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoIkZhaWxlZCB0byBmZXRjaCB1cGxvYWQgc3RhdHVzIik7CiAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKfQ=="},{"version":3,"names":["axios","API_BASE","analyzePlant","species","plantId","date","url","res","post","data","getPlantResults","get","getPlantTimeline","getVegetationTimeline","indexType","getTextureTimeline","bandName","textureType","getDatabaseData","uploadFiles","files","endpoint","formData","FormData","i","length","append","webkitRelativePath","name","response","fetch","method","body","ok","error","json","Error","detail","err","getUploadStatus"],"sources":["/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\nconst API_BASE = 'http://localhost:8000/api';\n\nexport async function analyzePlant(species, plantId, date) {\n  const url = `${API_BASE}/analyze-plant/${species}/${plantId}?date=${date}`;\n  const res = await axios.post(url);\n  return res.data;\n}\n\nexport async function getPlantResults(species, plantId, date) {\n  const url = `${API_BASE}/plant-results/${species}/${plantId}?date=${date}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\n// Timeline API functions\nexport async function getPlantTimeline(species, plantId) {\n  const url = `${API_BASE}/plant-timeline/${species}/${plantId}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\nexport async function getVegetationTimeline(species, plantId, indexType) {\n  const url = `${API_BASE}/plant-timeline/${species}/${plantId}/vegetation/${indexType}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\nexport async function getTextureTimeline(species, plantId, bandName, textureType) {\n  const url = `${API_BASE}/plant-timeline/${species}/${plantId}/texture/${bandName}/${textureType}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\nexport async function getDatabaseData(species, plantId, date) {\n  const url = `${API_BASE}/plant-database-data/${species}/${plantId}?date=${date}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\n/**\n * Upload files to the backend (raw or result).\n * @param {FileList|Array<File>} files - The files to upload.\n * @param {string} endpoint - 'raw-files' or 'result-files'\n * @returns {Promise<Object>} - The response from the backend.\n */\nexport async function uploadFiles(files, endpoint = \"raw-files\") {\n  const url = `${API_BASE}/upload/${endpoint}`;\n  const formData = new FormData();\n\n  // Append each file to the form data\n  for (let i = 0; i < files.length; i++) {\n    formData.append(\"files\", files[i], files[i].webkitRelativePath || files[i].name);\n  }\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || \"Upload failed\");\n    }\n\n    return await response.json();\n  } catch (err) {\n    // You can handle error display here or in your Vue component\n    throw err;\n  }\n}\n\nexport async function getUploadStatus() {\n  const url = `${API_BASE}/upload/status`;\n  const response = await fetch(url);\n  if (!response.ok) throw new Error(\"Failed to fetch upload status\");\n  return await response.json();\n}\n"],"mappings":"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","ignoreList":[]}]}