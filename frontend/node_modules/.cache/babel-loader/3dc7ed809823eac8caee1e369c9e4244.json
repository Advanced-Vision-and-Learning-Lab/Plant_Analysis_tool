{"remainingRequest":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/eslint-loader/index.js??ref--14-0!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/api.js","dependencies":[{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/api.js","mtime":1754524757169},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/package.json","mtime":1754527202542},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1754379194500},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js","mtime":1754379194406},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/eslint-loader/index.js","mtime":1754379195590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gc3JjL2FwaS5qcwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpjb25zdCBBUElfQkFTRSA9ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpJzsKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFuYWx5emVQbGFudChzcGVjaWVzLCBwbGFudElkLCBkYXRlKSB7CiAgY29uc3QgdXJsID0gYCR7QVBJX0JBU0V9L2FuYWx5emUtcGxhbnQvJHtzcGVjaWVzfS8ke3BsYW50SWR9P2RhdGU9JHtkYXRlfWA7CiAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucG9zdCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UGxhbnRSZXN1bHRzKHNwZWNpZXMsIHBsYW50SWQsIGRhdGUpIHsKICBjb25zdCB1cmwgPSBgJHtBUElfQkFTRX0vcGxhbnQtcmVzdWx0cy8ke3NwZWNpZXN9LyR7cGxhbnRJZH0/ZGF0ZT0ke2RhdGV9YDsKICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQodXJsKTsKICByZXR1cm4gcmVzLmRhdGE7Cn0KCi8vIFRpbWVsaW5lIEFQSSBmdW5jdGlvbnMKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFBsYW50VGltZWxpbmUoc3BlY2llcywgcGxhbnRJZCkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC10aW1lbGluZS8ke3NwZWNpZXN9LyR7cGxhbnRJZH1gOwogIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VmVnZXRhdGlvblRpbWVsaW5lKHNwZWNpZXMsIHBsYW50SWQsIGluZGV4VHlwZSkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC10aW1lbGluZS8ke3NwZWNpZXN9LyR7cGxhbnRJZH0vdmVnZXRhdGlvbi8ke2luZGV4VHlwZX1gOwogIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCh1cmwpOwogIHJldHVybiByZXMuZGF0YTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VGV4dHVyZVRpbWVsaW5lKHNwZWNpZXMsIHBsYW50SWQsIGJhbmROYW1lLCB0ZXh0dXJlVHlwZSkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9wbGFudC10aW1lbGluZS8ke3NwZWNpZXN9LyR7cGxhbnRJZH0vdGV4dHVyZS8ke2JhbmROYW1lfS8ke3RleHR1cmVUeXBlfWA7CiAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KHVybCk7CiAgcmV0dXJuIHJlcy5kYXRhOwp9CgovKioKICogVXBsb2FkIGZpbGVzIHRvIHRoZSBiYWNrZW5kIChyYXcgb3IgcmVzdWx0KS4KICogQHBhcmFtIHtGaWxlTGlzdHxBcnJheTxGaWxlPn0gZmlsZXMgLSBUaGUgZmlsZXMgdG8gdXBsb2FkLgogKiBAcGFyYW0ge3N0cmluZ30gZW5kcG9pbnQgLSAncmF3LWZpbGVzJyBvciAncmVzdWx0LWZpbGVzJwogKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSAtIFRoZSByZXNwb25zZSBmcm9tIHRoZSBiYWNrZW5kLgogKi8KLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwbG9hZEZpbGVzKGZpbGVzLCBlbmRwb2ludCA9ICJyYXctZmlsZXMiKSB7Ci8vICAgY29uc3QgdXJsID0gYCR7QVBJX0JBU0V9L3VwbG9hZC8ke2VuZHBvaW50fWA7Ci8vICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKCi8vICAgLy8gQXBwZW5kIGVhY2ggZmlsZSB0byB0aGUgZm9ybSBkYXRhCi8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7IGkrKykgewovLyAgICAgZm9ybURhdGEuYXBwZW5kKCJmaWxlcyIsIGZpbGVzW2ldLCBmaWxlc1tpXS53ZWJraXRSZWxhdGl2ZVBhdGggfHwgZmlsZXNbaV0ubmFtZSk7Ci8vICAgfQoKLy8gICB0cnkgewovLyAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHsKLy8gICAgICAgbWV0aG9kOiAiUE9TVCIsCi8vICAgICAgIGJvZHk6IGZvcm1EYXRhLAovLyAgICAgfSk7CgovLyAgICAgaWYgKCFyZXNwb25zZS5vaykgewovLyAgICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKLy8gICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLmRldGFpbCB8fCAiVXBsb2FkIGZhaWxlZCIpOwovLyAgICAgfQoKLy8gICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7Ci8vICAgfSBjYXRjaCAoZXJyKSB7Ci8vICAgICAvLyBZb3UgY2FuIGhhbmRsZSBlcnJvciBkaXNwbGF5IGhlcmUgb3IgaW4geW91ciBWdWUgY29tcG9uZW50Ci8vICAgICB0aHJvdyBlcnI7Ci8vICAgfQovLyB9CgpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VXBsb2FkU3RhdHVzKCkgewogIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS91cGxvYWQvc3RhdHVzYDsKICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7CiAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKCJGYWlsZWQgdG8gZmV0Y2ggdXBsb2FkIHN0YXR1cyIpOwogIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7Cn0="},{"version":3,"names":["axios","API_BASE","analyzePlant","species","plantId","date","url","res","post","data","getPlantResults","get","getPlantTimeline","getVegetationTimeline","indexType","getTextureTimeline","bandName","textureType","getUploadStatus","response","fetch","ok","Error","json"],"sources":["/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\nconst API_BASE = 'http://localhost:8000/api';\n\nexport async function analyzePlant(species, plantId, date) {\n  const url = `${API_BASE}/analyze-plant/${species}/${plantId}?date=${date}`;\n  const res = await axios.post(url);\n  return res.data;\n}\n\nexport async function getPlantResults(species, plantId, date) {\n  const url = `${API_BASE}/plant-results/${species}/${plantId}?date=${date}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\n// Timeline API functions\nexport async function getPlantTimeline(species, plantId) {\n  const url = `${API_BASE}/plant-timeline/${species}/${plantId}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\nexport async function getVegetationTimeline(species, plantId, indexType) {\n  const url = `${API_BASE}/plant-timeline/${species}/${plantId}/vegetation/${indexType}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\nexport async function getTextureTimeline(species, plantId, bandName, textureType) {\n  const url = `${API_BASE}/plant-timeline/${species}/${plantId}/texture/${bandName}/${textureType}`;\n  const res = await axios.get(url);\n  return res.data;\n}\n\n/**\n * Upload files to the backend (raw or result).\n * @param {FileList|Array<File>} files - The files to upload.\n * @param {string} endpoint - 'raw-files' or 'result-files'\n * @returns {Promise<Object>} - The response from the backend.\n */\n// export async function uploadFiles(files, endpoint = \"raw-files\") {\n//   const url = `${API_BASE}/upload/${endpoint}`;\n//   const formData = new FormData();\n\n//   // Append each file to the form data\n//   for (let i = 0; i < files.length; i++) {\n//     formData.append(\"files\", files[i], files[i].webkitRelativePath || files[i].name);\n//   }\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"POST\",\n//       body: formData,\n//     });\n\n//     if (!response.ok) {\n//       const error = await response.json();\n//       throw new Error(error.detail || \"Upload failed\");\n//     }\n\n//     return await response.json();\n//   } catch (err) {\n//     // You can handle error display here or in your Vue component\n//     throw err;\n//   }\n// }\n\nexport async function getUploadStatus() {\n  const url = `${API_BASE}/upload/status`;\n  const response = await fetch(url);\n  if (!response.ok) throw new Error(\"Failed to fetch upload status\");\n  return await response.json();\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,eAAeC,YAAYA,CAACC,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAE;EACzD,MAAMC,GAAG,GAAG,GAAGL,QAAQ,kBAAkBE,OAAO,IAAIC,OAAO,SAASC,IAAI,EAAE;EAC1E,MAAME,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAACF,GAAG,CAAC;EACjC,OAAOC,GAAG,CAACE,IAAI;AACjB;AAEA,OAAO,eAAeC,eAAeA,CAACP,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAE;EAC5D,MAAMC,GAAG,GAAG,GAAGL,QAAQ,kBAAkBE,OAAO,IAAIC,OAAO,SAASC,IAAI,EAAE;EAC1E,MAAME,GAAG,GAAG,MAAMP,KAAK,CAACW,GAAG,CAACL,GAAG,CAAC;EAChC,OAAOC,GAAG,CAACE,IAAI;AACjB;;AAEA;AACA,OAAO,eAAeG,gBAAgBA,CAACT,OAAO,EAAEC,OAAO,EAAE;EACvD,MAAME,GAAG,GAAG,GAAGL,QAAQ,mBAAmBE,OAAO,IAAIC,OAAO,EAAE;EAC9D,MAAMG,GAAG,GAAG,MAAMP,KAAK,CAACW,GAAG,CAACL,GAAG,CAAC;EAChC,OAAOC,GAAG,CAACE,IAAI;AACjB;AAEA,OAAO,eAAeI,qBAAqBA,CAACV,OAAO,EAAEC,OAAO,EAAEU,SAAS,EAAE;EACvE,MAAMR,GAAG,GAAG,GAAGL,QAAQ,mBAAmBE,OAAO,IAAIC,OAAO,eAAeU,SAAS,EAAE;EACtF,MAAMP,GAAG,GAAG,MAAMP,KAAK,CAACW,GAAG,CAACL,GAAG,CAAC;EAChC,OAAOC,GAAG,CAACE,IAAI;AACjB;AAEA,OAAO,eAAeM,kBAAkBA,CAACZ,OAAO,EAAEC,OAAO,EAAEY,QAAQ,EAAEC,WAAW,EAAE;EAChF,MAAMX,GAAG,GAAG,GAAGL,QAAQ,mBAAmBE,OAAO,IAAIC,OAAO,YAAYY,QAAQ,IAAIC,WAAW,EAAE;EACjG,MAAMV,GAAG,GAAG,MAAMP,KAAK,CAACW,GAAG,CAACL,GAAG,CAAC;EAChC,OAAOC,GAAG,CAACE,IAAI;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeS,eAAeA,CAAA,EAAG;EACtC,MAAMZ,GAAG,GAAG,GAAGL,QAAQ,gBAAgB;EACvC,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,CAAC;EACjC,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClE,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B","ignoreList":[]}]}