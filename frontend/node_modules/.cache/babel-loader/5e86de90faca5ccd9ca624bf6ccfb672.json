{"remainingRequest":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/views/PlantDetails.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/views/PlantDetails.vue","mtime":1754603075152},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/package.json","mtime":1754527202542},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1754379194500},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js","mtime":1754379194406},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1754379194500},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js","mtime":1754379197445}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["AppHeader","backgroundImage","ConfigurableButton","ConfigurableDropdown","AnalysisResults","getPlantResults","analyzePlant","getDatabaseData","name","components","data","species","$route","params","speciesName","backgroundImageOpacity","gradientTopColor","gradientBottomColor","gradientOpacity","selectedPlantId","selectedDate","hasStartedAnalysis","isAnalyzing","analysisProgress","results","analysisFailed","plantIdOptions","Array","from","length","_","i","label","value","dateOptions","computed","backgroundImageStyle","opacity","gradientStyle","topColor","hexToRgba","bottomColor","background","canStartAnalysis","plantIdDisplayText","selectedOption","find","option","dateDisplayText","methods","goBack","$router","push","handlePlantIdChange","plantId","console","log","handleDateChange","date","handleAnalyzeClick","fetchDatabaseData","result","fetchResults","error","alert","e","response","status","analysisError","pollForResult","progress","poll","setInterval","Math","random","min","allResultsReady","clearInterval","mainImages","allMainImages","every","k","vegIndexKeys","allVegIndices","some","morph","morphology_features","hasMorph","Object","keys","resetParameters","handleExport","exportData","type","handleShare","getDisplayText","toString","hex","r","parseInt","slice","g","b"],"sources":["src/views/PlantDetails.vue"],"sourcesContent":["<template>\n  <div id=\"plant-details\">\n    <!-- Background layers -->\n    <div class=\"background-container\">\n      <!-- Background image layer -->\n      <div\n        class=\"background-image\"\n        :style=\"backgroundImageStyle\"\n        v-if=\"backgroundImage\"\n      ></div>\n\n      <!-- Gradient overlay -->\n      <div\n        class=\"gradient-overlay\"\n        :style=\"gradientStyle\"\n      ></div>\n    </div>\n\n    <!-- Content -->\n    <div class=\"app-content\">\n      <AppHeader :whiteBars=\"[\n        { width: 2216, height: 15, x: -10, y: 175, opacity: 0.8 },\n        { width: 15, height: 750, x: 350, y: 200, opacity: 0.8 }]\"\n      />\n\n      <main class=\"content\">\n        <!-- Main content layout with left sidebar -->\n        <div class=\"content-layout\">\n          <!-- Parameters Section - Left Side -->\n          <div class=\"parameters-section\">\n            <h3 class=\"parameters-title\">Analysis Parameters</h3>\n\n            <!-- Plant ID Selection -->\n            <div class=\"parameter-group\">\n              <ConfigurableDropdown\n                v-model=\"selectedPlantId\"                \n                :options=\"plantIdOptions\"\n                :display-text=\"plantIdDisplayText\"\n                label=\"Plant ID\"\n                placeholder=\"Select Plant ID\"\n                size=\"small\"\n                :searchable=\"true\"\n                @change=\"handlePlantIdChange\"\n                class=\"dropdown\"\n              />\n            </div>\n\n            <!-- Date Selection -->\n            <div class=\"parameter-group\">\n              <ConfigurableDropdown\n                v-model=\"selectedDate\"\n                :options=\"dateOptions\"\n                :display-text=\"dateDisplayText\"\n                label=\"Analysis Date\"\n                placeholder=\"Select Date\"\n                size=\"small\"\n                :disabled=\"!selectedPlantId\"\n                :searchable=\"true\"\n                @change=\"handleDateChange\"\n                class=\"dropdown\"\n              />\n            </div>\n\n            <!-- Back Button -->\n            <!-- <ConfigurableButton\n                text=\"← Back to Selection\"\n                variant=\"secondary\"\n                size=\"medium\"\n                @click=\"goBack\"\n                class=\"back-button\"\n              /> -->\n\n            <!-- Analysis Button -->\n            <div class=\"parameter-group\">\n              <ConfigurableButton\n                text=\"Start Analysis\"\n                variant=\"primary\"\n                size=\"medium\"\n                :disabled=\"!canStartAnalysis\"\n                @click=\"handleAnalyzeClick\"\n                class=\"analyze-button\"\n              />\n            </div>\n\n            <!-- Reset Button -->\n            <div class=\"parameter-group\">\n              <ConfigurableButton\n                text=\"Reset Parameters\"\n                variant=\"outline\"\n                size=\"medium\"\n                @click=\"resetParameters\"\n                class=\"reset-button\"\n              />\n            </div>\n\n\n            <!-- Status Display -->\n            <div class=\"status-area\">\n              <div v-if=\"!selectedPlantId\" class=\"status-message\">\n                <h3>Step 1: Select Plant ID</h3>\n                <p>Choose a Plant ID from the parameters panel to begin analysis.</p>\n              </div>\n\n              <div v-else-if=\"!selectedDate\" class=\"status-message\">\n                <h3>Step 2: Select Analysis Date</h3>\n                <p>Plant ID <strong>{{ getDisplayText(selectedPlantId) }}</strong> selected. Now choose an analysis date.</p>\n              </div>\n\n              <div v-else class=\"status-message\">\n                <!-- Loading Progress Indicator -->\n                <div v-if=\"isAnalyzing\" class=\"loading-section\">\n                  <h3>Analysis in Progress...</h3>\n                  <div class=\"progress-container\">\n                    <div class=\"progress-bar\">\n                      <div class=\"progress-fill\" :style=\"{ width: analysisProgress + '%' }\"></div>\n                    </div>\n                    <div class=\"progress-text\">{{ Math.round(analysisProgress) }}%</div>\n                  </div>\n                  <p>Please wait while we process your data...</p>\n                </div>\n                \n                <!-- Analysis Results Status -->\n                <div v-else>\n                  <h3 v-if=\"results\">Analysis Successful</h3>\n                  <h3 v-else-if=\"analysisFailed\">Analysis Failed, Please try again</h3>\n                  <h3 v-else>Ready for Analysis</h3>\n                  <div class=\"config-summary\">\n                    <div class=\"config-item\">\n                      <strong>Plant Species:</strong> {{ species }}\n                    </div>\n                    <div class=\"config-item\">\n                      <strong>Plant ID:</strong> {{ getDisplayText(selectedPlantId) }}\n                    </div>\n                    <div class=\"config-item\">\n                      <strong>Date:</strong> {{ getDisplayText(selectedDate) }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- Go Back Button -->\n            <div class=\"parameter-group\">\n              <ConfigurableButton\n                text=\"Back\"\n                variant=\"outline\"\n                size=\"medium\"\n                @click=\"goBack\"\n                class=\"back-button\"\n              />\n            </div>\n            </div>\n          </div>\n\n          <!-- Main Content Area - Right Side -->\n          <div class=\"main-content-area\">\n            <div class=\"content-header\">\n              <!-- <h1 class=\"title\">{{ species }}</h1>\n              <h2 class=\"subtitle\">Plant Analysis Dashboard</h2> -->\n              \n            </div>\n\n            <!-- Analysis Results Component -->\n            <AnalysisResults\n              :plant-name=\"species\"\n              :plant-id=\"selectedPlantId\"\n              :analysis-date=\"selectedDate\"\n              :has-started-analysis=\"hasStartedAnalysis\"\n              :is-analyzing=\"isAnalyzing\"\n              :analysis-progress=\"analysisProgress\"\n              :results=\"results\"\n              :show-charts=\"true\"\n              title=\"Phenotyping Analysis Results\"\n              @export=\"handleExport\"\n              @share=\"handleShare\"\n              class = \"analysis-results\"\n            />\n          </div>\n        </div> \n      </main>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '../components/AppHeader.vue'\nimport backgroundImage from '@/assets/greenhouse-img2.jpg'\nimport ConfigurableButton from '../components/ConfigurableButton.vue'\nimport ConfigurableDropdown from '@/components/ConfigurableDropdown.vue';\nimport AnalysisResults from '../components/AnalysisResults.vue'\nimport { getPlantResults, analyzePlant, getDatabaseData } from '@/api.js'\n\nexport default {\n  name: 'PlantDetails',\n  components: {\n    AppHeader,\n    ConfigurableDropdown,\n    ConfigurableButton,\n    AnalysisResults\n  },\n  data() {\n    return {\n      species: this.$route.params.speciesName,\n      // Background configuration\n      backgroundImage: backgroundImage,\n      backgroundImageOpacity: 0.9,\n\n      // Gradient configuration\n      gradientTopColor: '#08B6E0',\n      gradientBottomColor: '#05AF6B',\n      gradientOpacity: 0.65,\n\n      // Form data\n      selectedPlantId: null,\n      selectedDate: null,\n\n      // Analysis state\n      hasStartedAnalysis: false,\n      isAnalyzing: false,\n      analysisProgress: 0,\n      results: null,\n      analysisFailed: false,\n\n      // Options data\n      plantIdOptions: Array.from({ length: 48 }, (_, i) => ({\n        label: `Plant ${i + 1}`,\n        value: `plant${i + 1}`\n      })),\n      \n      dateOptions: [\n        { label: '2024-12-04', value: '2024-12-04' },\n        { label: '2024-12-10', value: '2024-12-10' },\n        { label: '2024-12-16', value: '2024-12-16' },\n        { label: '2025-01-13', value: '2025-01-13' },\n        { label: '2025-01-24', value: '2025-01-24' },\n        { label: '2025-01-31', value: '2025-01-31' },\n        { label: '2025-02-05', value: '2025-02-05' },\n        { label: '2025-02-14', value: '2025-02-14' },\n        { label: '2025-03-03', value: '2025-03-03' },\n        { label: '2025-03-12', value: '2025-03-12' },\n        { label: '2025-03-24', value: '2025-03-24' },\n        { label: '2025-04-01', value: '2025-04-01' },\n        { label: '2025-04-15', value: '2025-04-15' },\n        { label: '2025-04-16', value: '2025-04-16' },\n        { label: '2025-04-17', value: '2025-04-17' },\n        { label: '2025-04-21', value: '2025-04-21' }\n      ]\n     \n    };\n  },\n  computed: {\n    backgroundImageStyle() {\n      if (!this.backgroundImage) return {};\n\n      return {\n        backgroundImage: `url(${this.backgroundImage})`,\n        opacity: this.backgroundImageOpacity\n      };\n    },\n\n    gradientStyle() {\n      const topColor = this.hexToRgba(this.gradientTopColor, this.gradientOpacity);\n      const bottomColor = this.hexToRgba(this.gradientBottomColor, this.gradientOpacity);\n\n      return {\n        background: `linear-gradient(to bottom, ${topColor}, ${bottomColor})`\n      };\n    },\n\n    canStartAnalysis() {\n      return this.selectedPlantId && this.selectedDate;\n    },\n\n    plantIdDisplayText() {\n      if (!this.selectedPlantId) return \"Select a Plant ID\";\n      \n      // Find the option that matches the selected value\n      const selectedOption = this.plantIdOptions.find(option => \n        option.value === this.selectedPlantId\n      );\n      \n      return selectedOption ? selectedOption.label : this.selectedPlantId.label;\n    },\n    \n    dateDisplayText() {\n      if (!this.selectedDate) return \"Select a Date\";\n      \n      // Find the option that matches the selected value\n      const selectedOption = this.dateOptions.find(option => \n        option.value === this.selectedDate\n      );\n      \n      return selectedOption ? selectedOption.label : this.selectedDate.label;\n    }\n  },\n  methods: {\n    goBack() {\n      // Navigate back to home page using router\n      this.$router.push({ name: 'HomePage' });\n    },\n\n    handlePlantIdChange(plantId) {\n      console.log('Plant ID changed to:', plantId);\n      // Update the selected plant ID\n      this.selectedPlantId = plantId;\n      // Clear date selection when plant ID changes\n      this.selectedDate = null;\n      this.results = null;\n    },\n\n    handleDateChange(date) {\n      this.selectedDate = date; \n      this.results = null;\n      console.log('Date changed to:', date);\n\n    },\n\n    handleAnalyzeClick() {\n      if (this.canStartAnalysis) {\n        console.log('Starting analysis for:', {\n          species: this.species,\n          plantId: this.selectedPlantId,\n          date: this.selectedDate\n        });\n\n        // Start the analysis process\n        this.hasStartedAnalysis = true;\n        this.isAnalyzing = true;\n        this.analysisProgress = 0;\n        this.results = null;\n        this.analysisFailed = false;\n        this.fetchDatabaseData(this.species, this.selectedPlantId.value, this.selectedDate.value);\n        // this.fetchResults(this.species, this.selectedPlantId.value, this.selectedDate.value); //USE THIS TO GET DATA FROM AWS\n      }\n    },\n\n    async fetchDatabaseData(species, plantId, date) {\n      const result = await getDatabaseData(species, plantId, date);\n      console.log('fetchDatabaseData: results fetched from backend.', result);\n      return result;\n    },\n\n    async fetchResults(species, plantId, date) {\n      this.isAnalyzing = true;\n      this.analysisProgress = 0;\n      this.analysisFailed = false;\n      console.log('fetchResults: started for', species, plantId, date);\n      try {\n        const result = await getPlantResults(species, plantId, date);\n        if (result && result.error) {\n          console.error('fetchResults: Analysis failed:', result.error);\n          this.isAnalyzing = false;\n          this.analysisProgress = 0;\n          this.analysisFailed = true;\n          alert(result.error);\n          return;\n        }\n        this.results = result;\n        this.analysisProgress = 100;\n        this.isAnalyzing = false;\n        this.analysisFailed = false;\n        console.log('fetchResults: Analysis succeeded, results fetched from backend.');\n      } catch (e) {\n        if (e.response && e.response.status === 404) {\n          try {\n            console.log('fetchResults: No results found, triggering analysis...');\n            await analyzePlant(species, plantId, date);\n            this.results = await getPlantResults(species, plantId, date);\n            this.analysisProgress = 100;\n            this.isAnalyzing = false;\n            this.analysisFailed = false;\n            console.log('fetchResults: Analysis triggered and results fetched.');\n          } catch (analysisError) {\n            console.error('fetchResults: Analysis failed after triggering:', analysisError);\n            this.isAnalyzing = false;\n            this.analysisProgress = 0;\n            this.analysisFailed = true;\n            alert('Failed to analyze plant. Please try again later.');\n          }\n        } else {\n          console.error('fetchResults: Failed to load results:', e);\n          this.isAnalyzing = false;\n          this.analysisProgress = 0;\n          this.analysisFailed = true;\n          alert('Error loading results. Please try again later.');\n        }\n      }\n    },\n\n    pollForResult(species, plantId, date) {\n      this.analysisProgress = 10;\n      let progress = 10;\n      const poll = setInterval(async () => {\n        try {\n          const result = await getPlantResults(species, plantId, date);\n          if (result) {\n            this.results = result;\n            progress += Math.random() * 20 + 10;\n            this.analysisProgress = Math.min(progress, 95);\n            if (this.allResultsReady(result)) {\n              this.analysisProgress = 100;\n              this.isAnalyzing = false;\n              clearInterval(poll);\n              console.log('Analysis succeeded: Results are now ready.');\n            }\n          }\n        } catch (e) {\n          // Still processing, keep polling\n        }\n      }, 3000);\n    },\n\n    allResultsReady(result) {\n      // Check for main images\n      const mainImages = ['original', 'mask', 'overlay', 'segmented'];\n      const allMainImages = mainImages.every(k => result && result[k]);\n      // Check for at least one vegetation index image\n      const vegIndexKeys = [\n        'ndvi', 'gndvi', 'evi2', 'ndre', 'ndwi', 'ngrdi', 'ari', 'ari2', 'avi', 'ccci', \n        'cigreen', 'cire', 'cvi', 'dswi4', 'dvi', 'exr', 'gemi', 'gosavi', 'grndvi', \n        'grvi', 'gsavi', 'ipvi', 'lci', 'mcari', 'mcari1', 'mcari2', 'mgrvi', 'msavi', \n        'msr', 'mtvi1', 'mtvi2', 'nli', 'osavi', 'pvi', 'rdvi', 'ri', 'rri1', 'sipi2', \n        'sr', 'tcari', 'tcariosavi', 'tndvi', 'tsavi', 'wdvi'\n      ];\n      const allVegIndices = vegIndexKeys.some(name => result && result[`vegetation_indices_${name}`]);\n      // Check for morphology features\n      const morph = result && result.morphology_features;\n      const hasMorph = morph && Object.keys(morph).length > 0;\n      return allMainImages && allVegIndices && hasMorph;\n    },\n\n    resetParameters() {\n      this.selectedPlantId = null;\n      this.selectedDate = null;\n      this.species = null;\n      this.hasStartedAnalysis = false;\n      this.isAnalyzing = false;\n      this.analysisProgress = 0;\n      this.results = null;\n      this.analysisFailed = false;\n      console.log('Parameters reset');\n    },\n\n    handleExport(exportData) {\n      console.log('Export requested:', exportData);\n      // Implement export logic here\n      if (exportData.type === 'csv') {\n        alert('CSV export would be implemented here');\n      } else if (exportData.type === 'pdf') {\n        alert('PDF export would be implemented here');\n      }\n    },\n\n    handleShare(data) {\n      console.log('Share requested:', data);\n      // Implement sharing logic here\n      alert('Sharing functionality would be implemented here');\n    },\n\n    getDisplayText(option) {\n      if (!option) return '';\n\n      if (typeof option === 'string' || typeof option === 'number') {\n        return option.toString();\n      }\n\n      return option.label || option.toString();\n    },\n\n    // Helper method to convert hex color to rgba with opacity\n    hexToRgba(hex, opacity) {\n      const r = parseInt(hex.slice(1, 3), 16);\n      const g = parseInt(hex.slice(3, 5), 16);\n      const b = parseInt(hex.slice(5, 7), 16);\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    }\n  }\n}\n</script>\n\n<style>\n/* Global styles to remove scrollbars */\nhtml, body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n}\n\n/* Hide scrollbars for webkit browsers */\n::-webkit-scrollbar {\n  display: none;\n}\n\n/* Hide scrollbars for Firefox */\nhtml {\n  scrollbar-width: none;\n}\n</style>\n\n<style scoped>\n\n#plant-details {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n}\n\n/* Background container that covers the entire screen */\n.background-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n}\n\n/* Background image layer */\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n/* Gradient overlay */\n.gradient-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n/* Content container */\n.app-content {\n  position: relative;\n  z-index: 1;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  text-align: center;\n}\n\n.content {\n  width: 100%;\n  max-width: 1400px;\n  padding-top: 120px;\n}\n\n/* Main layout with left sidebar */\n.content-layout {\n  display: flex;\n  gap: 30px;\n  min-height: calc(100vh - 200px);\n  align-items: flex-start;\n}\n\n/* Parameters Section - Left Sidebar */\n.parameters-section {\n  width: 300px;\n  border-radius: 16px;\n  padding: 24px;\n  backdrop-filter: blur(30px);\n  position: fixed;\n  top: 180px;\n  left: 0px;\n\n}\n\n.parameters-title {\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  text-align: center;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.2);\n  padding-bottom: 12px;\n  opacity: 0.8;\n}\n\n\n.parameter-group {\n  margin-bottom: 20px;\n}\n\n.dropdown {\n  width: 70%;\n}\n\n.analyze-button,\n.reset-button {\n  width: 70%;\n  margin-top: 8px;\n  font-weight: bold;\n}\n\n/* Main Content Area - Right Side */\n.main-content-area {\n  flex: 1;\n  min-height: 500px;\n}\n\n.content-header {\n  text-align: center;\n  margin-bottom: 40px;\n}\n\n.content-header .title {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.content-header .subtitle {\n  font-size: 32px;\n  margin-bottom: 20px;\n}\n\n\n/* Status Area */\n.status-area {\n  height: 225px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  padding: 32px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  text-align: center;\n}\n\n.status-message {\n  margin-top: -30px;\n  color: white;\n}\n\n.status-message h3 {\n  font-size: 28px;\n  margin-bottom: 16px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.status-message p {\n  font-size: 18px;\n  line-height: 1.6;\n  opacity: 0.9;\n  margin-bottom: 20px;\n}\n\n.config-summary {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 20px;\n  margin: 20px 0;\n  text-align: left;\n}\n\n.config-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  font-size: 16px;\n}\n\n.config-item:last-child {\n  border-bottom: none;\n}\n\n.title {\n  color: white;\n  font-size: 64px;\n  margin-top: 200px;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n  font-weight: 700;\n}\n\n.subtitle {\n  color: white;\n  font-size: 60px;\n  margin-bottom: 10px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  font-weight: 500;\n}\n\n.back-button {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  margin-top: 10px;\n  width: 40%;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  font-size: 18px;\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n}\n\n\n.plant-info {\n  margin-top: 40px;\n}\n\n.plant-description {\n  color: white;\n  font-size: 24px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  margin: 20px 0;\n}\n\n.details-content {\n  color: white;\n  font-size: 18px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: left;\n}\n\n.details-content ul {\n  margin: 20px 0;\n  padding-left: 20px;\n}\n\n.details-content li {\n  margin: 8px 0;\n  line-height: 1.5;\n}\n\n/* Loading Progress Indicator Styles */\n.loading-section {\n  margin-top: -30px;\n  color: white;\n}\n\n.loading-section h3 {\n  font-size: 28px;\n  margin-bottom: 16px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.progress-container {\n  position: relative;\n  width: 100%;\n  height: 20px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  overflow: hidden;\n  margin-bottom: 10px;\n}\n\n.progress-bar {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(to right, #4ade80, #22c55e);\n  border-radius: 10px;\n  transition: width 0.3s ease-in-out;\n  min-width: 0%;\n}\n\n.progress-text {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 14px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n</style>"],"mappings":"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","ignoreList":[]}]}