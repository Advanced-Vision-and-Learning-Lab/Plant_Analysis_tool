{"remainingRequest":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/components/AnalysisResults.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/src/components/AnalysisResults.vue","mtime":1754525957491},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/package.json","mtime":1754527202542},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1754379194500},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js","mtime":1754379194406},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1754379194500},{"path":"/Users/nazaro/Desktop/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js","mtime":1754379197445}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["PlantTimeline","name","components","props","species","type","String","required","plantId","Object","default","analysisDate","results","title","showStatus","Boolean","showCharts","data","processingTime","activeTab","showModal","selectedImage","vegIndexSearch","textureSearch","morphSearch","sortColumn","sortDirection","timelineConfig","featureType","specificFeature","displayImages","numImages","timelineData","showTimelineModal","vegIndexList","tabs","label","key","watch","handler","newResults","immediate","computed","nestedResult","endsWith","mainImages","console","log","keys","images","filter","k","map","capitalize","url","length","textureImages","bands","suffixes","band","suffix","push","replace","slice","img","vegetationIndicesImages","toUpperCase","startsWith","vegIndexHeaders","text","value","vegIndexItems","nested","vegetation_features","Array","isArray","filteredVegIndexItems","items","search","toLowerCase","item","index","includes","column","sort","a","b","aVal","bVal","textureHeaders","textureItems","texture_features","flatMap","obj","entries","feature","plant_id","filteredTextureItems","morphHeaders","morphItems","_this$results","morphology_features","filteredMorphItems","availableVegIndexImages","getVegIndexUrl","availableFeatures","canGenerateChart","methods","getDisplayText","option","toString","s","charAt","openImageModal","image","closeImageModal","sortTable","tableType","formatValue","toFixed","downloadCSV","headers","h","csv","join","row","JSON","stringify","blob","Blob","window","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","downloadAllImages","downloadModalImage","body","appendChild","removeChild","onFeatureTypeChange","generateTimelineChart","getPlantTimeline","error","alert","emits"],"sources":["src/components/AnalysisResults.vue"],"sourcesContent":["<template>\n  <div class=\"analysis-results\">\n\n    <!-- Content based on results state -->\n    <div class=\"results-content\">\n      <!-- No results state -->\n      <div v-if=\"!results\" class=\"no-results\">\n        <div class=\"no-results-message\">\n          <h4>No Results Available</h4>\n          <p>Please run an analysis to see results here.</p>\n        </div>\n      </div>\n\n      <!-- Results available - show with tabs -->\n      <div v-else class=\"results-available\">\n\n        <!-- Tabs Navigation -->\n        <div class=\"tabs-container\">\n          <div class=\"tabs-header sticky-tabs\">\n            <button\n              v-for=\"(tab, index) in tabs\"\n              :key=\"index\"\n              class=\"tab-button\"\n              :class=\"{ active: activeTab === index }\"\n              @click=\"activeTab = index\"\n            >\n              {{ tab.label }}\n            </button>\n          </div>\n\n          <!-- Tab Content -->\n          <div class=\"tab-content\">\n            <!-- Images Tab -->\n            <div v-if=\"activeTab === 0\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Main Images</h3>\n                <button v-if=\"mainImages.length\" @click=\"downloadAllImages()\" class=\"download-all-btn\">\n                  Download All Images\n                </button>\n              </div>\n              <div v-if=\"mainImages.length\">\n                <div class=\"image-grid\">\n                  <div v-for=\"img in mainImages\" :key=\"img.label\" class=\"image-item\">\n                    <h4 class=\"image-title\">{{ img.label }} Image</h4>\n                    <img \n                      :src=\"img.url\" \n                      :alt=\"img.label\" \n                      class=\"result-image clickable\" \n                      @click=\"openImageModal(img)\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"no-images-message\">\n                <h4>No Images Available</h4>\n                <p>No images were found in the analysis results.</p>\n                <p><strong>Debug Info:</strong> Plant ID: {{ getDisplayText(plantId) }}, Date: {{ getDisplayText(analysisDate) }}</p>\n              </div>\n            </div>\n\n            <!-- Texture Images Tab -->\n            <div v-else-if=\"activeTab === 1\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Texture Images</h3>\n                <button v-if=\"textureImages.length\" @click=\"downloadAllImages()\" class=\"download-all-btn\">\n                  Download All Images\n                </button>\n              </div>\n              <div v-if=\"textureImages.length\">\n                <div class=\"image-grid\">\n                  <div v-for=\"img in textureImages\" :key=\"img.label\" class=\"image-item\">\n                    <h4 class=\"image-title\">{{ img.label }}</h4>\n                    <img \n                      :src=\"img.url\" \n                      :alt=\"img.label\" \n                      class=\"result-image clickable\" \n                      @click=\"openImageModal(img)\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"no-images-message\">\n                <h4>No Texture Images Available</h4>\n                <p>No texture images were found in the analysis results.</p>\n              </div>\n            </div>\n\n            <!-- Vegetation Indices Images Tab -->\n            <div v-else-if=\"activeTab === 2\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Vegetation Indices Images</h3>\n                <button v-if=\"availableVegIndexImages.length\" @click=\"downloadAllImages()\" class=\"download-all-btn\">\n                  Download All Images\n                </button>\n              </div>\n              <div v-if=\"vegIndexList.length\">\n                <div class=\"image-grid\">\n                  <div v-for=\"(name) in vegIndexList\" :key=\"name\" class=\"image-item\">\n                    <h4 class=\"image-title\">{{ name }}</h4>\n                    <img \n                      v-if=\"getVegIndexUrl(name)\" \n                      :src=\"getVegIndexUrl(name)\" \n                      :alt=\"name\" \n                      class=\"result-image clickable\" \n                      @click=\"openImageModal({ label: name, url: getVegIndexUrl(name) })\"\n                    />\n                    <div v-else class=\"no-image-placeholder\">\n                      <p>No image available for {{ name }}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"no-images-message\">\n                <h4>No Vegetation Indices Available</h4>\n                <p>No vegetation indices were found in the analysis results.</p>\n              </div>\n            </div>\n\n            <!-- Vegetation Indices Table Tab -->\n            <div v-else-if=\"activeTab === 3\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Vegetation Indices Table</h3>\n                <button @click=\"downloadCSV('vegIndex')\" class=\"download-btn\">\n                  Download CSV\n                </button>\n              </div>\n              <div class=\"table-controls\">\n                <input \n                  v-model=\"vegIndexSearch\" \n                  type=\"text\" \n                  placeholder=\"Search vegetation indices...\" \n                  class=\"search-input\"\n                />\n                \n              </div>\n              <div v-if=\"vegIndexItems.length\" class=\"table-container\">\n                <table class=\"data-table\">\n                  <thead>\n                    <tr>\n                      <th v-for=\"header in vegIndexHeaders\" :key=\"header.value\" @click=\"sortTable('vegIndex', header.value)\" class=\"sortable-header\">\n                        {{ header.text }}\n                        <span v-if=\"sortColumn === header.value\" class=\"sort-indicator\">\n                          {{ sortDirection === 'asc' ? '↑' : '↓' }}\n                        </span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"item in filteredVegIndexItems\" :key=\"item.index\">\n                      <td v-for=\"header in vegIndexHeaders\" :key=\"header.value\">\n                        {{ formatValue(item[header.value]) }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div v-else class=\"no-data-message\">\n                <h4>No Vegetation Indices Data Available</h4>\n                <p>No vegetation indices data was found in the analysis results.</p>\n              </div>\n            </div>\n\n            <!-- Texture Features Table Tab -->\n            <div v-else-if=\"activeTab === 4\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Texture Features Table</h3>\n                <button @click=\"downloadCSV('texture')\" class=\"download-btn\">\n                  Download CSV\n                </button>\n              </div>\n              <div class=\"table-controls\">\n                <input \n                  v-model=\"textureSearch\" \n                  type=\"text\" \n                  placeholder=\"Search texture features...\" \n                  class=\"search-input\"\n                />\n              </div>\n              <div v-if=\"textureItems.length\" class=\"table-container\">\n                <table class=\"data-table\">\n                  <thead>\n                    <tr>\n                      <th v-for=\"header in textureHeaders\" :key=\"header.value\" @click=\"sortTable('texture', header.value)\" class=\"sortable-header\">\n                        {{ header.text }}\n                        <span v-if=\"sortColumn === header.value\" class=\"sort-indicator\">\n                          {{ sortDirection === 'asc' ? '↑' : '↓' }}\n                        </span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"item in filteredTextureItems\" :key=\"item.feature\">\n                      <td v-for=\"header in textureHeaders\" :key=\"header.value\">\n                        {{ formatValue(item[header.value]) }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div v-else class=\"no-data-message\">\n                <h4>No Texture Features Data Available</h4>\n                <p>No texture features data was found in the analysis results.</p>\n              </div>\n            </div>\n\n            <!-- Morphological Features Table Tab -->\n            <div v-else-if=\"activeTab === 5\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Morphological Features Table</h3>\n                <button @click=\"downloadCSV('morph')\" class=\"download-btn\">\n                  Download CSV\n                </button>\n              </div>\n              <div class=\"table-controls\">\n                <input \n                  v-model=\"morphSearch\" \n                  type=\"text\" \n                  placeholder=\"Search morphological features...\" \n                  class=\"search-input\"\n                />\n              </div>\n              <div v-if=\"morphItems.length\" class=\"table-container\">\n                <table class=\"data-table\">\n                  <thead>\n                    <tr>\n                      <th v-for=\"header in morphHeaders\" :key=\"header.value\" @click=\"sortTable('morph', header.value)\" class=\"sortable-header\">\n                        {{ header.text }}\n                        <span v-if=\"sortColumn === header.value\" class=\"sort-indicator\">\n                          {{ sortDirection === 'asc' ? '↑' : '↓' }}\n                        </span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"item in filteredMorphItems\" :key=\"item.feature\">\n                      <td v-for=\"header in morphHeaders\" :key=\"header.value\">\n                        {{ formatValue(item[header.value]) }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div v-else class=\"no-data-message\">\n                <h4>No Morphological Features Data Available</h4>\n                <p>No morphological features data was found in the analysis results.</p>\n              </div>\n            </div>\n\n            <!-- Plant Timeline Tab -->\n            <div v-else-if=\"activeTab === 6\" class=\"tab-panel\">\n              <div class=\"tab-header\">\n                <h3>Plant Timeline Configuration</h3>\n              </div>\n              \n              <div class=\"timeline-config\">\n                <!-- Feature Type Selection -->\n                <div class=\"config-section\">\n                  <label class=\"config-label\">Feature Type:</label>\n                  <select v-model=\"timelineConfig.featureType\" @change=\"onFeatureTypeChange\" class=\"config-select\">\n                    <option value=\"\">Select Feature Type</option>\n                    <option value=\"vegetation\">Vegetation Index</option>\n                    <option value=\"texture\">Texture Feature</option>\n                    <option value=\"morphology\">Morphology Feature</option>\n                  </select>\n                </div>\n\n                <!-- Specific Feature Selection -->\n                <div class=\"config-section\">\n                  <label class=\"config-label\">Specific Feature:</label>\n                  <select v-model=\"timelineConfig.specificFeature\" :disabled=\"!timelineConfig.featureType\" class=\"config-select\">\n                    <option value=\"\">Select Specific Feature</option>\n                    <option v-for=\"feature in availableFeatures\" :key=\"feature\" :value=\"feature\">\n                      {{ feature }}\n                    </option>\n                  </select>\n                </div>\n\n                <!-- Display Options -->\n                <div class=\"config-section\">\n                  <label class=\"config-label\">Display Options:</label>\n                  <div class=\"display-options\">\n                    <label class=\"checkbox-label\">\n                      <input type=\"checkbox\" v-model=\"timelineConfig.displayImages\" />\n                      Display Images\n                    </label>\n                    <div class=\"number-input-group\">\n                      <label>Number of Images:</label>\n                      <input \n                        type=\"number\" \n                        v-model=\"timelineConfig.numImages\" \n                        min=\"1\" \n                        max=\"10\" \n                        class=\"number-input\"\n                        :disabled=\"!timelineConfig.displayImages\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Generate Chart Button -->\n                <div class=\"config-section\">\n                  <button \n                    @click=\"generateTimelineChart\" \n                    :disabled=\"!canGenerateChart\"\n                    class=\"generate-chart-btn\"\n                  >\n                    Generate Timeline Chart\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Image Modal -->\n    <div v-if=\"showModal\" class=\"image-modal\" @click=\"closeImageModal\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <button class=\"modal-download\" @click=\"downloadModalImage\" title=\"Download Image\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n              <polyline points=\"7,10 12,15 17,10\"></polyline>\n              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n            </svg>\n          </button>\n          <button class=\"modal-close\" @click=\"closeImageModal\" title=\"Close\">×</button>\n        </div>\n        <img :src=\"selectedImage.url\" :alt=\"selectedImage.label\" class=\"modal-image\" />\n        <h3 class=\"modal-title\">{{ selectedImage.label }}</h3>\n      </div>\n    </div>\n\n    <!-- Timeline Modal -->\n    <div v-if=\"showTimelineModal\" class=\"timeline-modal\" @click=\"showTimelineModal = false\">\n      <div class=\"timeline-modal-content\" @click.stop>\n        <div class=\"timeline-modal-header\">\n          <h2>Plant Timeline</h2>\n          <button class=\"modal-close\" @click=\"showTimelineModal = false\" title=\"Close\">×</button>\n        </div>\n        <PlantTimeline \n          v-if=\"timelineData\"\n          :timeline-data=\"timelineData\"\n          :config=\"timelineConfig\"\n          @close=\"showTimelineModal = false\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PlantTimeline from './PlantTimeline.vue';\n\nexport default {\n  name: 'AnalysisResults',\n  components: {\n    PlantTimeline\n  },\n  props: {\n    // Basic props\n    species: {\n      type: String,\n      required: true\n    },\n    \n    plantId: {\n      type: [String, Object],\n      default: null\n    },\n    \n    analysisDate: {\n      type: [String, Object],\n      default: null\n    },\n    \n    // Results data\n    results: {\n      type: Object,\n      default: null\n    },\n    \n    // Configuration\n    title: {\n      type: String,\n      default: 'Analysis Results'\n    },\n    \n    showStatus: {\n      type: Boolean,\n      default: true\n    },\n    \n    showCharts: {\n      type: Boolean,\n      default: true\n    }\n  },\n  \n  data() {\n    return {\n      processingTime: 1.3,\n      activeTab: 0,\n      showModal: false,\n      selectedImage: null,\n      \n      // Search and sort state\n      vegIndexSearch: '',\n      textureSearch: '',\n      morphSearch: '',\n      sortColumn: '',\n      sortDirection: 'asc',\n      \n      // Timeline configuration\n      timelineConfig: {\n        featureType: '',\n        specificFeature: '',\n        displayImages: false,\n        numImages: 5\n      },\n      \n      // Timeline data\n      timelineData: null,\n      showTimelineModal: false,\n      \n      // Vegetation indices list (same as ResultViewer.vue)\n      vegIndexList: [\n        'ARI','ARI2','AVI','CCCI','CIgreen','CIRE','CVI','DSWI4','DVI',\n        'EVI2','ExR','GEMI','GNDVI','GOSAVI','GRNDVI','GRVI','GSAVI',\n        'IPVI','LCI','MCARI','MCARI1','MCARI2','MGRVI','MSAVI','MSR',\n        'MTVI1','MTVI2','NDRE','NDVI','NDWI','NGRDI','NLI','OSAVI',\n        'PVI','RDVI','RI','RRI1','SIPI2','SR','TCARI','TCARIOSAVI',\n        'TNDVI','TSAVI','WDVI'\n      ],\n      \n      // Tab definitions\n      tabs: [\n        { label: 'Images', key: 'images' },\n        { label: 'Texture Images', key: 'texture-images' },\n        { label: 'Vegetation Indices Images', key: 'veg-indices-images' },\n        { label: 'Vegetation Indices Table', key: 'veg-indices-table' },\n        { label: 'Texture Features Table', key: 'texture-features-table' },\n        { label: 'Morphological Features Table', key: 'morphological-features-table' },\n        { label: 'Plant Timeline', key: 'plant-timeline' }\n      ]\n    };\n  },\n  \n  watch: {\n    // Reset to first tab when new results are loaded\n    results: {\n      handler(newResults) {\n        if (newResults) {\n          this.activeTab = 0;\n        }\n      },\n      immediate: true\n    }\n  },\n  \n  computed: {\n    \n    // Extract nested result object if present\n    nestedResult() {\n      if (!this.results) return null;\n      for (const key in this.results) {\n        if (key.endsWith('_result') && typeof this.results[key] === 'object') {\n          return this.results[key];\n        }\n      }\n      return null;\n    },\n    \n    mainImages() {\n      if (!this.results) {\n        console.log('mainImages: no results object');\n        return [];\n      }\n      const keys = ['original', 'mask', 'overlay', 'segmented'];\n      const images = keys.filter(k => this.results[k]).map(k => ({ label: this.capitalize(k), key: k, url: this.results[k] }));\n      console.log('mainImages computed - results:', this.results);\n      if (images.length > 0) {\n        console.log(`mainImages: found ${images.length} images`);\n      } else {\n        console.log('mainImages: no images found');\n      }\n      return images;\n    },\n    \n    textureImages() {\n      if (!this.results) {\n        console.log('textureImages: no result object');\n        return [];\n      }\n      // Find all keys that match texture_{band}_{suffix} and group by band\n      const bands = ['color','green','nir','pca','red','red_edge'];\n      const suffixes = [\n        '01_orig','02_gray','03_lbp','04_hog','05_lac1','06_lac2','07_lac3','08_ehd_map'\n      ];\n      let images = [];\n      console.log('textureImages computed - result:', this.results);\n      for (const band of bands) {\n        for (const suffix of suffixes) {\n          const key = `texture_${band}_${suffix}`;\n          if (this.results[key]) {\n            images.push({\n              label: `${this.capitalize(band)} ${suffix.replace(/\\d+_/, '').replace('_', ' ').replace('.png','')}`,\n              band,\n              suffix,\n              url: this.results[key]\n            });\n          }\n        }\n      }\n      console.log(`textureImages: found ${images.length} texture images`);\n      if (images.length > 0) {\n        console.log('textureImages: sample image keys found:', images.slice(0, 3).map(img => img.label));\n      } else {\n        console.log('textureImages: no texture images found');\n      }\n      return images;\n    },\n    \n    vegetationIndicesImages() {\n      if (!this.results) {\n        console.log('vegetationIndicesImages: no result object');\n        return [];\n      }\n      \n      console.log('vegetationIndicesImages computed - result:', this.results);\n      const images = this.vegIndexList\n        .filter(key => this.results[`vegetation_indices_${key}`])\n        .map(key => ({\n          label: key.toUpperCase(),\n          url: this.results[`vegetation_indices_${key}`]\n        }));\n      \n      console.log(`vegetationIndicesImages: found ${images.length} vegetation indices images`);\n      if (images.length > 0) {\n        console.log('vegetationIndicesImages: sample indices found:', images.slice(0, 5).map(img => img.label));\n      } else {\n        console.log('vegetationIndicesImages: no vegetation indices images found');\n        console.log('vegetationIndicesImages: checking for vegetation_indices keys in result:', \n          Object.keys(this.results).filter(key => key.startsWith('vegetation_indices_')));\n      }\n      return images;\n    },\n    \n    // Table headers for vegetation indices\n    vegIndexHeaders() {\n      return [\n        { text: 'Index', value: 'index' },\n        { text: 'Mean', value: 'mean' },\n        { text: 'Std', value: 'std' },\n        { text: 'Min', value: 'min' },\n        { text: 'Max', value: 'max' },\n        { text: '25%', value: 'q25' },\n        { text: '50%', value: 'median' },\n        { text: '75%', value: 'q75' }\n      ];\n    },\n    \n    // Table items for vegetation indices\n    vegIndexItems() {\n      const nested = this.nestedResult;\n      if (!nested || !nested.vegetation_features || !Array.isArray(nested.vegetation_features)) return [];\n      return nested.vegetation_features;\n    },\n    \n    // Filtered and sorted vegetation indices\n    filteredVegIndexItems() {\n      let items = this.vegIndexItems;\n      \n      // Apply search filter\n      if (this.vegIndexSearch) {\n        const search = this.vegIndexSearch.toLowerCase();\n        items = items.filter(item => \n          item.index && item.index.toLowerCase().includes(search)\n        );\n      }\n      \n      // Apply sorting\n      if (this.sortColumn && this.sortColumn.startsWith('vegIndex_')) {\n        const column = this.sortColumn.replace('vegIndex_', '');\n        items = [...items].sort((a, b) => {\n          const aVal = a[column];\n          const bVal = b[column];\n          if (this.sortDirection === 'asc') {\n            return aVal > bVal ? 1 : -1;\n          } else {\n            return aVal < bVal ? 1 : -1;\n          }\n        });\n      }\n      \n      return items;\n    },\n    \n    // Table headers for texture features\n    textureHeaders() {\n      return [\n        { text: 'Feature', value: 'feature' },\n        { text: 'Value', value: 'value' }\n      ];\n    },\n    \n    // Table items for texture features\n    textureItems() {\n      const nested = this.nestedResult;\n      if (!nested || !nested.texture_features || !Array.isArray(nested.texture_features)) return [];\n      // Flatten all features for all bands\n      return nested.texture_features.flatMap(obj =>\n        Object.entries(obj).map(([feature, value]) => ({\n          feature: obj.plant_id ? `${obj.plant_id} - ${feature}` : feature,\n          value\n        }))\n      );\n    },\n    \n    // Filtered and sorted texture features\n    filteredTextureItems() {\n      let items = this.textureItems;\n      \n      // Apply search filter\n      if (this.textureSearch) {\n        const search = this.textureSearch.toLowerCase();\n        items = items.filter(item => \n          item.feature && item.feature.toLowerCase().includes(search)\n        );\n      }\n      \n      // Apply sorting\n      if (this.sortColumn && this.sortColumn.startsWith('texture_')) {\n        const column = this.sortColumn.replace('texture_', '');\n        items = [...items].sort((a, b) => {\n          const aVal = a[column];\n          const bVal = b[column];\n          if (this.sortDirection === 'asc') {\n            return aVal > bVal ? 1 : -1;\n          } else {\n            return aVal < bVal ? 1 : -1;\n          }\n        });\n      }\n      \n      return items;\n    },\n    \n    // Table headers for morphology features\n    morphHeaders() {\n      return [\n        { text: 'Feature', value: 'feature' },\n        { text: 'Value', value: 'value' }\n      ];\n    },\n    \n    // Table items for morphology features\n    morphItems() {\n      return Object.entries(this.results?.morphology_features || {}).map(([feature, value]) => ({\n        feature,\n        value\n      }));\n    },\n    \n    // Filtered and sorted morphological features\n    filteredMorphItems() {\n      let items = this.morphItems;\n      \n      // Apply search filter\n      if (this.morphSearch) {\n        const search = this.morphSearch.toLowerCase();\n        items = items.filter(item => \n          item.feature && item.feature.toLowerCase().includes(search)\n        );\n      }\n      \n      // Apply sorting\n      if (this.sortColumn && this.sortColumn.startsWith('morph_')) {\n        const column = this.sortColumn.replace('morph_', '');\n        items = [...items].sort((a, b) => {\n          const aVal = a[column];\n          const bVal = b[column];\n          if (this.sortDirection === 'asc') {\n            return aVal > bVal ? 1 : -1;\n          } else {\n            return aVal < bVal ? 1 : -1;\n          }\n        });\n      }\n      \n      return items;\n    },\n    \n    // Available vegetation index images for download\n    availableVegIndexImages() {\n      return this.vegIndexList\n        .filter(name => this.getVegIndexUrl(name))\n        .map(name => ({\n          label: name,\n          url: this.getVegIndexUrl(name)\n        }));\n    },\n    \n    // Available features for timeline\n    availableFeatures() {\n      if (!this.timelineConfig.featureType) return [];\n      \n      if (this.timelineConfig.featureType === 'vegetation') {\n        return this.vegIndexList;\n      } else if (this.timelineConfig.featureType === 'texture') {\n        return ['color', 'green', 'nir', 'pca', 'red_edge', 'red'];\n      } else if (this.timelineConfig.featureType === 'morphology') {\n        return ['area', 'perimeter', 'circularity', 'aspect_ratio', 'compactness'];\n      }\n      return [];\n    },\n    \n    // Check if chart can be generated\n    canGenerateChart() {\n      return this.timelineConfig.featureType && this.timelineConfig.specificFeature;\n    }\n  },\n  \n  methods: {\n    getDisplayText(option) {\n      if (!option) return '';\n      if (typeof option === 'string' || typeof option === 'number') {\n        return option.toString();\n      }\n      return option.label || option.toString();\n    },\n    capitalize(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    },\n    openImageModal(image) {\n      this.selectedImage = image;\n      this.showModal = true;\n    },\n    closeImageModal() {\n      this.showModal = false;\n      this.selectedImage = null;\n    },\n    sortTable(tableType, column) {\n      if (this.sortColumn === `${tableType}_${column}`) {\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortColumn = `${tableType}_${column}`;\n        this.sortDirection = 'asc';\n      }\n    },\n    formatValue(value) {\n      if (typeof value === 'number') {\n        return value.toFixed(4);\n      }\n      return value;\n    },\n    downloadCSV(type) {\n      let headers = [];\n      let items = [];\n      \n      if (type === 'vegIndex') {\n        headers = this.vegIndexHeaders.map(h => h.text);\n        items = this.filteredVegIndexItems;\n      } else if (type === 'texture') {\n        headers = this.textureHeaders.map(h => h.text);\n        items = this.filteredTextureItems;\n      } else if (type === 'morph') {\n        headers = this.morphHeaders.map(h => h.text);\n        items = this.filteredMorphItems;\n      }\n      \n      const csv = [\n        headers.join(','),\n        ...items.map(row => \n          headers.map(h => {\n            const value = row[h.toLowerCase()];\n            return JSON.stringify(value);\n          }).join(',')\n        )\n      ].join('\\n');\n      \n      const blob = new Blob([csv], { type: 'text/csv' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${type}_table.csv`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n    },\n    \n    // Get vegetation index image URL by name (same as ResultViewer.vue)\n    getVegIndexUrl(name) {\n      const key = `vegetation_indices_${name}`;\n      return this.results && this.results[key] ? this.results[key] : null;\n    },\n\n    // Download all images for a specific type\n    downloadAllImages() {\n      // let images = [];\n      \n      // if (type === 'main') {\n      //   images = this.mainImages;\n      // } else if (type === 'texture') {\n      //   images = this.textureImages;\n      // } else if (type === 'vegetation') {\n      //   images = this.availableVegIndexImages;\n      // }\n      \n      // if (images.length === 0) {\n      //   alert('No images to download for this type.');\n      //   return;\n      // }\n\n      // const zip = new JSZip();\n      // const promises = images.map(async (img, index) => {\n      //   try {\n      //     const response = await fetch(img.url);\n      //     if (!response.ok) {\n      //       throw new Error(`Failed to fetch ${img.label}`);\n      //     }\n      //     const blob = await response.blob();\n      //     const name = img.label.replace(/[^a-zA-Z0-9]/g, '_'); // Clean up label for filename\n      //     return zip.file(`${name}.png`, blob);\n      //   } catch (error) {\n      //     console.error(`Error downloading ${img.label}:`, error);\n      //     return null;\n      //   }\n      // });\n\n      // Promise.all(promises).then(() => {\n      //   zip.generateAsync({ type: \"blob\" }).then(function(blob) {\n      //     const url = window.URL.createObjectURL(blob);\n      //     const a = document.createElement('a');\n      //     a.href = url;\n      //     a.download = `${type}_images.zip`;\n      //     a.click();\n      //     window.URL.revokeObjectURL(url);\n      //   });\n      // }).catch(error => {\n      //   console.error('Error creating zip file:', error);\n      //   alert('Error creating download file. Please try again.');\n      // });\n    },\n\n    downloadModalImage() {\n      if (this.selectedImage && this.selectedImage.url) {\n        const a = document.createElement('a');\n        a.href = this.selectedImage.url;\n        a.download = `${this.selectedImage.label.replace(/[^a-zA-Z0-9]/g, '_')}.png`; // Default to .png\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      }\n    },\n    \n    // Timeline methods\n    onFeatureTypeChange() {\n      this.timelineConfig.specificFeature = '';\n    },\n    \n    async generateTimelineChart() {\n      try {\n        const plantId = this.getDisplayText(this.plantId);\n        const species = this.species;\n        \n        // Import the API function\n        const { getPlantTimeline } = await import('../api.js');\n        \n        // Get timeline data from API\n        const timelineData = await getPlantTimeline(species, plantId);\n        \n        // Show timeline modal\n        this.timelineData = timelineData;\n        this.showTimelineModal = true;\n        \n      } catch (error) {\n        console.error('Error generating timeline chart:', error);\n        alert('Error generating timeline chart. Please try again.');\n      }\n    }\n  },\n  \n  emits: ['export', 'share']\n}\n</script>\n\n<style scoped>\n.analysis-results {\n  padding: 24px;\n  position: fixed;\n  top: 200px;\n  left: 380px;\n  width: 76%;\n  height: 73%;\n  backdrop-filter: blur(30px);\n  border-radius: 16px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* Custom scrollbar styles for the results area */\n.analysis-results ::-webkit-scrollbar {\n  width: 35px;\n}\n\n.analysis-results ::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.26);\n  border-radius: 4px;\n}\n\n.analysis-results ::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: 4px;\n  transition: background 0.3s ease;\n}\n\n.analysis-results ::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.705);\n}\n\n.analysis-results ::-webkit-scrollbar-corner {\n  background: transparent;\n}\n\n.results-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.1);\n  flex-shrink: 0;\n}\n\n.results-title {\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.results-content {\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-right: 8px;\n  margin-right: -8px;\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1);\n}\n\n.analysis-status {\n  padding: 6px 12px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.status-complete {\n  background: rgba(34, 197, 94, 0.2);\n  color: #4ade80;\n  border: 1px solid rgba(34, 197, 94, 0.3);\n}\n\n.status-no-results {\n  background: rgba(107, 114, 128, 0.2);\n  color: #9ca3af;\n  border: 1px solid rgba(107, 114, 128, 0.3);\n}\n\n/* No results state */\n.no-results {\n  text-align: center;\n  /* Place the message in the center of the screen */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.no-results-message h4 {\n  color: white;\n  font-size: 40px;\n  margin-bottom: 16px;\n}\n\n.no-results-message p {\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 16px;\n}\n\n/* Results available */\n.results-available {\n  padding-bottom: 20px;\n}\n\n.results-available > div {\n  margin-bottom: 32px;\n}\n\n.results-available h4 {\n  color: white;\n  font-size: 18px;\n  margin-bottom: 16px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.results-summary {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 12px;\n  padding: 20px;\n}\n\n.summary-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n}\n\n.summary-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  color: white;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.summary-label {\n  font-weight: 500;\n}\n\n/* Tabs Styles */\n.tabs-container {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n.tabs-header {\n  display: flex;\n  background: rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  justify-content: center;\n  overflow-x: auto;\n}\n\n.sticky-tabs {\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  backdrop-filter: blur(10px);\n  background: rgba(255, 255, 255, 0.15);\n}\n\n.tab-button {\n  padding: 12px 20px;\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.7);\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 800;\n  white-space: nowrap;\n  transition: all 0.2s ease;\n  border-bottom: 2px solid transparent;\n}\n\n.tab-button:hover {\n  color: white;\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.tab-button.active {\n  color: white;\n  background: rgba(255, 255, 255, 0.1);\n  border-bottom-color: #4ade80;\n}\n\n.tab-content {\n  padding: 20px;\n}\n\n.tab-panel {\n  min-height: 400px;\n}\n\n/* Image grid styles */\n.image-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n/* Image Tab Header */\n.tab-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.tab-header h3 {\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n/* Download All Images Button */\n.download-all-btn {\n  padding: 8px 16px;\n  background: #000000;\n  color: #ffffff;\n  border: 1px solid #000000;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 0.2s ease;\n}\n\n.download-all-btn:hover {\n  background: #333333;\n  border-color: #333333;\n}\n\n.image-item {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.image-title {\n  color: white;\n  margin-top: 0px;\n  margin-bottom: 12px;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: underline;\n  text-decoration-color: rgb(255, 255, 255);\n  text-underline-offset: 8px;\n  text-decoration-thickness: 4px;\n}\n\n.result-image {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.result-image.clickable {\n  cursor: pointer;\n}\n\n.result-image.clickable:hover {\n  transform: scale(1.02);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n}\n\n.no-images-message {\n  text-align: center;\n  padding: 40px 20px;\n  color: white;\n}\n\n.no-images-message h4 {\n  font-size: 20px;\n  margin-bottom: 16px;\n  color: #fbbf24;\n}\n\n.no-images-message p {\n  margin-bottom: 12px;\n  line-height: 1.5;\n}\n\n.no-images-message strong {\n  color: #4ade80;\n}\n\n.no-image-placeholder {\n  background: rgba(255, 255, 255, 0.05);\n  border: 2px dashed rgba(255, 255, 255, 0.3);\n  border-radius: 8px;\n  padding: 20px;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 14px;\n  min-height: 150px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.no-image-placeholder p {\n  margin: 0;\n  font-style: italic;\n}\n\n/* Table Controls */\n.table-controls {\n  display: flex;\n  gap: 12px;\n  margin-bottom: 20px;\n  align-items: center;\n}\n\n.search-input {\n  flex: 1;\n  padding: 8px 12px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 14px;\n}\n\n.search-input::placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n/* Download Button - Black background with white text */\n.download-btn {\n  padding: 8px 16px;\n  background: #000000;\n  color: #ffffff;\n  border: 1px solid #000000;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 0.2s ease;\n}\n\n.download-btn:hover {\n  background: #333333;\n  border-color: #333333;\n}\n\n/* Table Styles - More solid background and bolder text */\n.table-container {\n  background: rgba(255, 255, 255, 0.15);\n  border-radius: 8px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.data-table {\n  width: 100%;\n  border-collapse: collapse;\n  color: white;\n  font-size: 14px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.data-table th { \n  background: rgba(255, 255, 255, 0.2);\n  padding: 12px 8px;\n  text-align: center;\n  font-weight: 700;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  position: relative;\n  font-size: 22px;\n}\n\n.data-table td {\n  padding: 10px 8px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  font-weight: 600;\n  font-size: 18px;\n}\n\n.data-table tr:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.sortable-header {\n  cursor: pointer;\n  user-select: none;\n  transition: background 0.2s ease;\n  text-align: center;\n}\n\n.sortable-header:hover {\n  background: rgba(255, 255, 255, 0.25);\n}\n\n.sort-indicator {\n  margin-left: 4px;\n  font-weight: bold;\n  color: #4ade80;\n}\n\n.no-data-message {\n  text-align: center;\n  padding: 40px 20px;\n  color: white;\n}\n\n.no-data-message h4 {\n  font-size: 20px;\n  margin-bottom: 16px;\n  color: #fbbf24;\n}\n\n.no-data-message p {\n  margin-bottom: 12px;\n  line-height: 1.5;\n}\n\n/* Image Modal Styles */\n.image-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(10px);\n}\n\n.modal-content {\n  position: relative;\n  max-width: 90%;\n  max-height: 90%;\n  background: #ffffff;\n  border-radius: 12px;\n  padding: 20px;\n  text-align: center;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n}\n\n.modal-header {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  gap: 10px;\n  z-index: 10;\n}\n\n.modal-close {\n  background: #000000;\n  border: none;\n  color: #ffffff;\n  font-size: 20px;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 50%;\n  width: 35px;\n  height: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background 0.2s ease;\n  font-weight: bold;\n}\n\n.modal-close:hover {\n  background: #333333;\n}\n\n.modal-download {\n  background: #000000;\n  border: none;\n  color: #ffffff;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 50%;\n  width: 35px;\n  height: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background 0.2s ease;\n}\n\n.modal-download:hover {\n  background: #333333;\n}\n\n.modal-image {\n  max-width: 100%;\n  max-height: 55vh;\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.modal-title {\n  color: #000000;\n  margin-top: 16px;\n  font-size: 24px;\n  font-weight: 600;\n}\n\n/* Timeline Configuration Styles */\n.timeline-config {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 24px;\n  margin-top: 20px;\n}\n\n.config-section {\n  margin-bottom: 24px;\n}\n\n.config-section:last-child {\n  margin-bottom: 0;\n}\n\n.config-label {\n  display: block;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 8px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.config-select {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 14px;\n  transition: all 0.2s ease;\n}\n\n.config-select:focus {\n  outline: none;\n  border-color: #4ade80;\n  background: rgba(255, 255, 255, 0.15);\n}\n\n.config-select:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.config-select option {\n  background: #333;\n  color: white;\n}\n\n.display-options {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.checkbox-label {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: white;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.checkbox-label input[type=\"checkbox\"] {\n  width: 18px;\n  height: 18px;\n  accent-color: #4ade80;\n}\n\n.number-input-group {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.number-input-group label {\n  color: white;\n  font-size: 14px;\n  white-space: nowrap;\n}\n\n.number-input {\n  width: 80px;\n  padding: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 14px;\n  text-align: center;\n}\n\n.number-input:focus {\n  outline: none;\n  border-color: #4ade80;\n}\n\n.number-input:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.generate-chart-btn {\n  width: 100%;\n  padding: 16px;\n  background: #4ade80;\n  color: #000000;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-shadow: none;\n}\n\n.generate-chart-btn:hover:not(:disabled) {\n  background: #22c55e;\n  transform: translateY(-1px);\n}\n\n.generate-chart-btn:disabled {\n  background: rgba(255, 255, 255, 0.2);\n  color: rgba(255, 255, 255, 0.5);\n  cursor: not-allowed;\n  transform: none;\n}\n\n/* Timeline Modal Styles */\n.timeline-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n  backdrop-filter: blur(10px);\n}\n\n.timeline-modal-content {\n  position: relative;\n  width: 95%;\n  height: 95%;\n  background: #ffffff;\n  border-radius: 12px;\n  overflow: hidden;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n}\n\n.timeline-modal-header {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: #000000;\n  color: white;\n  z-index: 10;\n}\n\n.timeline-modal-header h2 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]}]}