{"remainingRequest":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/views/HomePage.vue?vue&type=style&index=0&id=c6bdc170&lang=css","dependencies":[{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/views/HomePage.vue","mtime":1751665030574},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/css-loader/dist/cjs.js","mtime":1748892967239},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1748892968095},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/postcss-loader/src/index.js","mtime":1748892967695},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1748892967032},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js","mtime":1748892968094}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIEdsb2JhbCBzdHlsZXMgdG8gcmVtb3ZlIHNjcm9sbGJhcnMgKi8KaHRtbCwgYm9keSB7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7Cn0KCi8qIEhpZGUgc2Nyb2xsYmFycyBmb3Igd2Via2l0IGJyb3dzZXJzICovCjo6LXdlYmtpdC1zY3JvbGxiYXIgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi8qIEhpZGUgc2Nyb2xsYmFycyBmb3IgRmlyZWZveCAqLwpodG1sIHsKICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7Cn0K"},{"version":3,"sources":["HomePage.vue"],"names":[],"mappings":";AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"HomePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"home\">\n    <!-- Background layers -->\n    <div class=\"background-container\">\n      <!-- Background image layer -->\n      <div\n        class=\"background-image\"\n        :style=\"backgroundImageStyle\"\n        v-if=\"backgroundImage\"\n      ></div>\n\n      <!-- Gradient overlay -->\n      <div\n        class=\"gradient-overlay\"\n        :style=\"gradientStyle\"\n      ></div>\n    </div>\n\n    <!-- Content -->\n    <div class=\"app-content\">\n      <AppHeader :whiteBars=\"[\n        { width: 2216, height: 16, x: -10, y: 175, opacity: 0.8 }]\"\n      />\n\n      <main class=\"content\">\n        <div class=\"title-container\">\n          <h1 class=\"title\">Greenhouse Automatic <br> Phenotyping Tool</h1>\n          <div class=\"documentation-icon\" @click=\"openDocumentation\" title=\"Documentation\">\n            <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.89 22 5.99 22H18C19.1 22 20 21.1 20 20V8L14 2Z\" stroke=\"white\" stroke-width=\"2\" fill=\"rgba(255,255,255,0.1)\"/>\n              <path d=\"M14 2V8H20\" stroke=\"white\" stroke-width=\"2\" fill=\"none\"/>\n              <path d=\"M16 13H8\" stroke=\"white\" stroke-width=\"2\"/>\n              <path d=\"M16 17H8\" stroke=\"white\" stroke-width=\"2\"/>\n              <path d=\"M10 9H8\" stroke=\"white\" stroke-width=\"2\"/>\n            </svg>\n            <div class=\"tooltip\">Documentation</div>\n          </div>\n        </div>\n        <div class=\"description\">\n          Analyze your plant images for biotic and abiotic greenhouses with advanced AI-powered tools.\n        </div>\n        <h2 class=\"subtitle\">Select Plant</h2>\n        <div class=\"title-underline\"></div>\n\n        <div class=\"selection-container\">\n          <PlantSelectionCard\n            title=\"Biotic\"\n            :plants=\"[{name:'Sorghum', disabled: false}]\"\n            @select-plant=\"handlePlantSelection\"\n            :selectedPlant=\"selectedPlant\"\n          />\n          <PlantSelectionCard\n            title=\"Abiotic\"\n            :plants=\"[{name:'Rice', disabled: true}, {name: 'Corn', disabled: true}]\"\n            @select-plant=\"handlePlantSelection\"\n            :selectedPlant=\"selectedPlant\"\n          />\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PlantSelectionCard from '../components/PlantSelectionCard.vue'\nimport AppHeader from '../components/AppHeader.vue'\nimport backgroundImage from '@/assets/greenhouse-img1.jpg'\n\nexport default {\n  name: 'HomePage',\n  components: {\n    PlantSelectionCard,\n    AppHeader\n  },\n  data() {\n    return {\n      selectedPlant: null,\n      \n      // Background configuration\n      backgroundImage: backgroundImage,\n      backgroundImageOpacity: 0.8,\n      \n      // Gradient configuration\n      gradientTopColor: '#08B6E0',\n      gradientBottomColor: '#05AF6B',\n      gradientOpacity: 0.7,\n    };\n  },\n  computed: {\n    backgroundImageStyle() {\n      if (!this.backgroundImage) return {};\n      \n      return {\n        backgroundImage: `url(${this.backgroundImage})`,\n        opacity: this.backgroundImageOpacity\n      };\n    },\n    \n    gradientStyle() {\n      const topColor = this.hexToRgba(this.gradientTopColor, this.gradientOpacity);\n      const bottomColor = this.hexToRgba(this.gradientBottomColor, this.gradientOpacity);\n      \n      return {\n        background: `linear-gradient(to bottom, ${topColor}, ${bottomColor})`\n      };\n    }\n  },\n  methods: {\n    handlePlantSelection(plant) {\n      // Navigate to plant details page using router\n      this.$router.push({\n        name: 'PlantDetails',\n        params: { plantName: plant }\n      });\n    },\n    \n    openDocumentation() {\n      window.open('https://automatedplantphenotypinganalysisdocs.readthedocs.io/en/latest/developer_guide.html', '_blank');\n    },\n    \n    // Helper method to convert hex color to rgba with opacity\n    hexToRgba(hex, opacity) {\n      const r = parseInt(hex.slice(1, 3), 16);\n      const g = parseInt(hex.slice(3, 5), 16);\n      const b = parseInt(hex.slice(5, 7), 16);\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    },\n    \n    // Background configuration methods\n    setBackgroundImage(imageUrl) {\n      this.backgroundImage = imageUrl;\n    },\n    \n    setBackgroundImageOpacity(opacity) {\n      this.backgroundImageOpacity = Math.max(0, Math.min(1, opacity));\n    },\n    \n    setGradientColors(topColor, bottomColor) {\n      this.gradientTopColor = topColor;\n      this.gradientBottomColor = bottomColor;\n    },\n    \n    setGradientOpacity(opacity) {\n      this.gradientOpacity = Math.max(0, Math.min(1, opacity));\n    }\n  }\n}\n</script>\n\n<style>\n/* Global styles to remove scrollbars */\nhtml, body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n}\n\n/* Hide scrollbars for webkit browsers */\n::-webkit-scrollbar {\n  display: none;\n}\n\n/* Hide scrollbars for Firefox */\nhtml {\n  scrollbar-width: none;\n}\n</style>\n\n<style scoped>\n#home {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n}\n\n/* Background container that covers the entire screen */\n.background-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n}\n\n/* Background image layer */\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n/* Gradient overlay */\n.gradient-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n/* Content container */\n.app-content {\n  position: relative;\n  z-index: 1;\n  min-height: 97vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  text-align: center;\n}\n\n.content {\n  width: 100%;\n  max-width: 1200px;\n}\n\n.title-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 200px;\n  margin-bottom: 20px;\n}\n\n.title {\n  color: white;\n  font-size: 73px;\n  margin-top: -10px;\n  margin-bottom: 0px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n  font-weight: 900;\n}\n\n.documentation-icon {\n  position: relative;\n  top: 40px;\n  left: 20px;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n}\n\n.documentation-icon:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: scale(1.1);\n}\n\n.documentation-icon svg {\n  display: block;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n}\n\n.tooltip {\n  position: absolute;\n  bottom: -40px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 6px 12px;\n  border-radius: 6px;\n  font-size: 14px;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s ease;\n  pointer-events: none;\n  backdrop-filter: blur(10px);\n}\n\n.documentation-icon:hover .tooltip {\n  opacity: 1;\n  visibility: visible;\n  bottom: -35px;\n}\n\n.subtitle {\n  color: white;\n  font-size: 60px;\n  margin-bottom: 40px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  font-weight: 500;\n}\n\n.description {\n  color: white;\n  font-size: 20px;\n  max-width: 450px;\n  margin: 0 auto -30px auto;\n  text-shadow: 1px 1px 2px rgb(0, 0, 0);\n  line-height: 1.6;\n  opacity: 0.9;\n}\n\n.title-underline {\n  width: 30%;\n  height: 6px;\n  background-color: white;\n  border-radius: 2px;\n  margin: -35px auto 20px auto;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  opacity: 0.9;\n}\n\n.selection-container {\n  display: flex;\n  height: 369px;\n  flex-wrap: wrap;\n  gap: 100px;\n  justify-content: center;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .title {\n    font-size: 48px;\n  }\n  \n  .subtitle {\n    font-size: 36px;\n  }\n  \n  .description {\n    font-size: 16px;\n    max-width: 350px;\n  }\n  \n  .selection-container {\n    flex-direction: column;\n    align-items: center;\n    gap: 40px;\n  }\n}\n</style>\n"]}]}