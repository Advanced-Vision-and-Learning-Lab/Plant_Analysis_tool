{"remainingRequest":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/views/PlantDetails.vue?vue&type=style&index=1&id=4b5ec1de&scoped=true&lang=css","dependencies":[{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/views/PlantDetails.vue","mtime":1751663551417},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/css-loader/dist/cjs.js","mtime":1748892967239},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1748892968095},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/postcss-loader/src/index.js","mtime":1748892967695},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1748892967032},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js","mtime":1748892968094}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNwbGFudC1kZXRhaWxzIHsKICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgaGVpZ2h0OiAxMDB2aDsKICB3aWR0aDogMTAwdnc7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLyogQmFja2dyb3VuZCBjb250YWluZXIgdGhhdCBjb3ZlcnMgdGhlIGVudGlyZSBzY3JlZW4gKi8KLmJhY2tncm91bmQtY29udGFpbmVyIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIHotaW5kZXg6IC0xOwp9CgovKiBCYWNrZ3JvdW5kIGltYWdlIGxheWVyICovCi5iYWNrZ3JvdW5kLWltYWdlIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQtc2l6ZTogY292ZXI7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOwogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDsKfQoKLyogR3JhZGllbnQgb3ZlcmxheSAqLwouZ3JhZGllbnQtb3ZlcmxheSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKfQoKLyogQ29udGVudCBjb250YWluZXIgKi8KLmFwcC1jb250ZW50IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogMTsKICBtaW4taGVpZ2h0OiAxMDB2aDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgcGFkZGluZzogMjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5jb250ZW50IHsKICB3aWR0aDogMTAwJTsKICBtYXgtd2lkdGg6IDE0MDBweDsKICBwYWRkaW5nLXRvcDogMTIwcHg7Cn0KCi8qIE1haW4gbGF5b3V0IHdpdGggbGVmdCBzaWRlYmFyICovCi5jb250ZW50LWxheW91dCB7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDMwcHg7CiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDIwMHB4KTsKICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsKfQoKLyogUGFyYW1ldGVycyBTZWN0aW9uIC0gTGVmdCBTaWRlYmFyICovCi5wYXJhbWV0ZXJzLXNlY3Rpb24gewogIHdpZHRoOiAzMDBweDsKICBib3JkZXItcmFkaXVzOiAxNnB4OwogIHBhZGRpbmc6IDI0cHg7CiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDMwcHgpOwogIHBvc2l0aW9uOiBmaXhlZDsKICB0b3A6IDE4MHB4OwogIGxlZnQ6IDBweDsKCn0KCi5wYXJhbWV0ZXJzLXRpdGxlIHsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiAyNHB4OwogIGZvbnQtd2VpZ2h0OiA2MDA7CiAgbWFyZ2luLWJvdHRvbTogMjRweDsKICB0ZXh0LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjUpOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpOwogIHBhZGRpbmctYm90dG9tOiAxMnB4OwogIG9wYWNpdHk6IDAuODsKfQoKCi5wYXJhbWV0ZXItZ3JvdXAgewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5kcm9wZG93biB7CiAgd2lkdGg6IDcwJTsKfQoKLmFuYWx5emUtYnV0dG9uLAoucmVzZXQtYnV0dG9uIHsKICB3aWR0aDogNzAlOwogIG1hcmdpbi10b3A6IDhweDsKfQoKLyogTWFpbiBDb250ZW50IEFyZWEgLSBSaWdodCBTaWRlICovCi5tYWluLWNvbnRlbnQtYXJlYSB7CiAgZmxleDogMTsKICBtaW4taGVpZ2h0OiA1MDBweDsKfQoKLmNvbnRlbnQtaGVhZGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogNDBweDsKfQoKLmNvbnRlbnQtaGVhZGVyIC50aXRsZSB7CiAgZm9udC1zaXplOiA0OHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5jb250ZW50LWhlYWRlciAuc3VidGl0bGUgewogIGZvbnQtc2l6ZTogMzJweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgouYmFjay1idXR0b24gewogIG1hcmdpbi10b3A6IDIwcHg7Cn0KCi8qIFN0YXR1cyBBcmVhICovCi5zdGF0dXMtYXJlYSB7CiAgaGVpZ2h0OiAyMjVweDsKICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOwogIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgcGFkZGluZzogMzJweDsKICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLnN0YXR1cy1tZXNzYWdlIHsKICBtYXJnaW4tdG9wOiAtMzBweDsKICBjb2xvcjogd2hpdGU7Cn0KCi5zdGF0dXMtbWVzc2FnZSBoMyB7CiAgZm9udC1zaXplOiAyOHB4OwogIG1hcmdpbi1ib3R0b206IDE2cHg7CiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC41KTsKfQoKLnN0YXR1cy1tZXNzYWdlIHAgewogIGZvbnQtc2l6ZTogMThweDsKICBsaW5lLWhlaWdodDogMS42OwogIG9wYWNpdHk6IDAuOTsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgouY29uZmlnLXN1bW1hcnkgewogIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsKICBib3JkZXItcmFkaXVzOiAxMnB4OwogIHBhZGRpbmc6IDIwcHg7CiAgbWFyZ2luOiAyMHB4IDA7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoKLmNvbmZpZy1pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBwYWRkaW5nOiA4cHggMDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOwogIGZvbnQtc2l6ZTogMTZweDsKfQoKLmNvbmZpZy1pdGVtOmxhc3QtY2hpbGQgewogIGJvcmRlci1ib3R0b206IG5vbmU7Cn0KCi50aXRsZSB7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtc2l6ZTogNjRweDsKICBtYXJnaW4tdG9wOiAyMDBweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIHRleHQtc2hhZG93OiAycHggMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgZm9udC13ZWlnaHQ6IDcwMDsKfQoKLnN1YnRpdGxlIHsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiA2MHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC41KTsKICBmb250LXdlaWdodDogNTAwOwp9CgouYmFjay1idXR0b24gewogIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsKICBjb2xvcjogd2hpdGU7CiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOwogIHBhZGRpbmc6IDEycHggMjRweDsKICBib3JkZXItcmFkaXVzOiAyNXB4OwogIGZvbnQtc2l6ZTogMThweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgbWFyZ2luOiAyMHB4IDA7CiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsKICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7Cn0KCi5iYWNrLWJ1dHRvbjpob3ZlciB7CiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTsKICBib3gtc2hhZG93OiAwIDRweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKfQoKCi5wbGFudC1pbmZvIHsKICBtYXJnaW4tdG9wOiA0MHB4Owp9CgoucGxhbnQtZGVzY3JpcHRpb24gewogIGNvbG9yOiB3aGl0ZTsKICBmb250LXNpemU6IDI0cHg7CiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC41KTsKICBtYXJnaW46IDIwcHggMDsKfQoKLmRldGFpbHMtY29udGVudCB7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtc2l6ZTogMThweDsKICB0ZXh0LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjUpOwogIG1heC13aWR0aDogNjAwcHg7CiAgbWFyZ2luOiAwIGF1dG87CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoKLmRldGFpbHMtY29udGVudCB1bCB7CiAgbWFyZ2luOiAyMHB4IDA7CiAgcGFkZGluZy1sZWZ0OiAyMHB4Owp9CgouZGV0YWlscy1jb250ZW50IGxpIHsKICBtYXJnaW46IDhweCAwOwogIGxpbmUtaGVpZ2h0OiAxLjU7Cn0KCg=="},{"version":3,"sources":["PlantDetails.vue"],"names":[],"mappings":";AAkYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PlantDetails.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"plant-details\">\n    <!-- Background layers -->\n    <div class=\"background-container\">\n      <!-- Background image layer -->\n      <div\n        class=\"background-image\"\n        :style=\"backgroundImageStyle\"\n        v-if=\"backgroundImage\"\n      ></div>\n\n      <!-- Gradient overlay -->\n      <div\n        class=\"gradient-overlay\"\n        :style=\"gradientStyle\"\n      ></div>\n    </div>\n\n    <!-- Content -->\n    <div class=\"app-content\">\n      <AppHeader :whiteBars=\"[\n        { width: 2216, height: 15, x: -10, y: 175, opacity: 0.8 },\n        { width: 15, height: 750, x: 350, y: 200, opacity: 0.8 }]\"\n      />\n\n      <main class=\"content\">\n        <!-- Main content layout with left sidebar -->\n        <div class=\"content-layout\">\n          <!-- Parameters Section - Left Side -->\n          <div class=\"parameters-section\">\n            <h3 class=\"parameters-title\">Analysis Parameters</h3>\n\n            <!-- Plant ID Selection -->\n            <div class=\"parameter-group\">\n              <ConfigurableDropdown\n                v-model=\"selectedPlantId\"                \n                :options=\"plantIdOptions\"\n                :display-text=\"plantIdDisplayText\"\n                label=\"Plant ID\"\n                placeholder=\"Select Plant ID\"\n                size=\"small\"\n                :searchable=\"true\"\n                @change=\"handlePlantIdChange\"\n                class=\"dropdown\"\n              />\n            </div>\n\n            <!-- Date Selection -->\n            <div class=\"parameter-group\">\n              <ConfigurableDropdown\n                v-model=\"selectedDate\"\n                :options=\"dateOptions\"\n                :display-text=\"dateDisplayText\"\n                label=\"Analysis Date\"\n                placeholder=\"Select Date\"\n                size=\"small\"\n                :disabled=\"!selectedPlantId\"\n                :searchable=\"true\"\n                @change=\"handleDateChange\"\n                class=\"dropdown\"\n              />\n            </div>\n\n            <!-- Back Button -->\n            <!-- <ConfigurableButton\n                text=\"← Back to Selection\"\n                variant=\"secondary\"\n                size=\"medium\"\n                @click=\"goBack\"\n                class=\"back-button\"\n              /> -->\n\n            <!-- Analysis Button -->\n            <div class=\"parameter-group\">\n              <ConfigurableButton\n                text=\"Start Analysis\"\n                variant=\"primary\"\n                size=\"medium\"\n                :disabled=\"!canStartAnalysis\"\n                @click=\"handleAnalyzeClick\"\n                class=\"analyze-button\"\n              />\n            </div>\n\n            <!-- Reset Button -->\n            <div class=\"parameter-group\">\n              <ConfigurableButton\n                text=\"Reset Parameters\"\n                variant=\"outline\"\n                size=\"medium\"\n                @click=\"resetParameters\"\n                class=\"reset-button\"\n              />\n            </div>\n\n            <!-- Status Display -->\n            <div class=\"status-area\">\n              <div v-if=\"!selectedPlantId\" class=\"status-message\">\n                <h3>Step 1: Select Plant ID</h3>\n                <p>Choose a Plant ID from the parameters panel to begin analysis.</p>\n              </div>\n\n              <div v-else-if=\"!selectedDate\" class=\"status-message\">\n                <h3>Step 2: Select Analysis Date</h3>\n                <p>Plant ID <strong>{{ getDisplayText(selectedPlantId) }}</strong> selected. Now choose an analysis date.</p>\n              </div>\n\n              <div v-else class=\"status-message\">\n                <h3>Ready for Analysis</h3>\n                <div class=\"config-summary\">\n                  <div class=\"config-item\">\n                    <strong>Plant Type:</strong> {{ plantName }}\n                  </div>\n                  <div class=\"config-item\">\n                    <strong>Plant ID:</strong> {{ getDisplayText(selectedPlantId) }}\n                  </div>\n                  <div class=\"config-item\">\n                    <strong>Date:</strong> {{ getDisplayText(selectedDate) }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Main Content Area - Right Side -->\n          <div class=\"main-content-area\">\n            <div class=\"content-header\">\n              <!-- <h1 class=\"title\">{{ plantName }}</h1>\n              <h2 class=\"subtitle\">Plant Analysis Dashboard</h2> -->\n              \n            </div>\n\n            <!-- Analysis Results Component -->\n            <AnalysisResults\n              :plant-name=\"plantName\"\n              :plant-id=\"selectedPlantId\"\n              :analysis-date=\"selectedDate\"\n              :has-started-analysis=\"hasStartedAnalysis\"\n              :is-analyzing=\"isAnalyzing\"\n              :analysis-progress=\"analysisProgress\"\n              :show-charts=\"true\"\n              title=\"Phenotyping Analysis Results\"\n              @export=\"handleExport\"\n              @share=\"handleShare\"\n              class = \"analysis-results\"\n            />\n          </div>\n        </div> \n      </main>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '../components/AppHeader.vue'\nimport backgroundImage from '@/assets/greenhouse-img2.jpg'\nimport ConfigurableButton from '../components/ConfigurableButton.vue'\nimport ConfigurableDropdown from '@/components/ConfigurableDropdown.vue';\nimport AnalysisResults from '../components/AnalysisResults.vue'\n\nexport default {\n  name: 'PlantDetails',\n  components: {\n    AppHeader,\n    ConfigurableDropdown,\n    ConfigurableButton,\n    AnalysisResults\n  },\n  props: {\n    plantName: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      // Background configuration\n      backgroundImage: backgroundImage,\n      backgroundImageOpacity: 0.9,\n\n      // Gradient configuration\n      gradientTopColor: '#08B6E0',\n      gradientBottomColor: '#05AF6B',\n      gradientOpacity: 0.65,\n\n      // Form data\n      selectedPlantId: null,\n      selectedDate: null,\n\n      // Analysis state\n      hasStartedAnalysis: false,\n      isAnalyzing: false,\n      analysisProgress: 0,\n\n      // Options data\n      plantIdOptions: Array.from({ length: 48 }, (_, i) => ({\n        label: `Plant ${i + 1}`,\n        value: `plant${i + 1}`\n      })),\n      \n      dateOptions: [\n        { label: '2024-12-04', value: '2024-12-04' },\n        { label: '2024-12-10', value: '2024-12-10' },\n        { label: '2024-12-16', value: '2024-12-16' },\n        { label: '2025-01-13', value: '2025-01-13' },\n        { label: '2025-01-24', value: '2025-01-24' },\n        { label: '2025-01-31', value: '2025-01-31' },\n        { label: '2025-02-05', value: '2025-02-05' },\n        { label: '2025-02-14', value: '2025-02-14' },\n        { label: '2025-03-03', value: '2025-03-03' },\n        { label: '2025-03-12', value: '2025-03-12' },\n        { label: '2025-03-24', value: '2025-03-24' },\n        { label: '2025-04-01', value: '2025-04-01' },\n        { label: '2025-04-15', value: '2025-04-15' },\n        { label: '2025-04-16', value: '2025-04-16' },\n        { label: '2025-04-17', value: '2025-04-17' },\n        { label: '2025-04-21', value: '2025-04-21' }\n      ]\n     \n    };\n  },\n  computed: {\n    backgroundImageStyle() {\n      if (!this.backgroundImage) return {};\n\n      return {\n        backgroundImage: `url(${this.backgroundImage})`,\n        opacity: this.backgroundImageOpacity\n      };\n    },\n\n    gradientStyle() {\n      const topColor = this.hexToRgba(this.gradientTopColor, this.gradientOpacity);\n      const bottomColor = this.hexToRgba(this.gradientBottomColor, this.gradientOpacity);\n\n      return {\n        background: `linear-gradient(to bottom, ${topColor}, ${bottomColor})`\n      };\n    },\n\n    canStartAnalysis() {\n      return this.selectedPlantId && this.selectedDate;\n    },\n\n    plantIdDisplayText() {\n      if (!this.selectedPlantId) return \"Select a Plant ID\";\n      \n      // Find the option that matches the selected value\n      const selectedOption = this.plantIdOptions.find(option => \n        option.value === this.selectedPlantId\n      );\n      \n      return selectedOption ? selectedOption.label : this.selectedPlantId;\n    },\n    \n    dateDisplayText() {\n      if (!this.selectedDate) return \"Select a Date\";\n      \n      // Find the option that matches the selected value\n      const selectedOption = this.dateOptions.find(option => \n        option.value === this.selectedDate\n      );\n      \n      return selectedOption ? selectedOption.label : this.selectedDate;\n    }\n  },\n  methods: {\n    goBack() {\n      // Navigate back to home page using router\n      this.$router.push({ name: 'HomePage' });\n    },\n\n    handlePlantIdChange(plantId) {\n      console.log('Plant ID changed to:', plantId);\n      // Update the selected plant ID\n      this.selectedPlantId = plantId;\n      // Clear date selection when plant ID changes\n      this.selectedDate = null;\n    },\n\n    handleDateChange(date) {\n      this.selectedDate = date;\n      \n      console.log('Date changed to:', date);\n    },\n\n    handleAnalyzeClick() {\n      if (this.canStartAnalysis) {\n        console.log('Starting analysis for:', {\n          plantType: this.plantName,\n          plantId: this.selectedPlantId,\n          date: this.selectedDate\n        });\n\n        // Start the analysis process\n        this.hasStartedAnalysis = true;\n        this.isAnalyzing = true;\n        this.analysisProgress = 0;\n\n        // Simulate analysis progress\n        this.simulateAnalysisProgress();\n      }\n    },\n\n    simulateAnalysisProgress() {\n      const progressInterval = setInterval(() => {\n        this.analysisProgress += Math.random() * 15 + 5; // Random progress between 5-20%\n\n        if (this.analysisProgress >= 100) {\n          this.analysisProgress = 100;\n          this.isAnalyzing = false;\n          clearInterval(progressInterval);\n          console.log('Analysis complete!');\n        }\n      }, 500); // Update every 500ms\n    },\n\n    resetParameters() {\n      this.selectedPlantId = null;\n      this.selectedDate = null;\n      this.hasStartedAnalysis = false;\n      this.isAnalyzing = false;\n      this.analysisProgress = 0;\n      console.log('Parameters reset');\n    },\n\n    handleExport(exportData) {\n      console.log('Export requested:', exportData);\n      // Implement export logic here\n      if (exportData.type === 'csv') {\n        alert('CSV export would be implemented here');\n      } else if (exportData.type === 'pdf') {\n        alert('PDF export would be implemented here');\n      }\n    },\n\n    handleShare(data) {\n      console.log('Share requested:', data);\n      // Implement sharing logic here\n      alert('Sharing functionality would be implemented here');\n    },\n\n    getDisplayText(option) {\n      if (!option) return '';\n\n      if (typeof option === 'string' || typeof option === 'number') {\n        return option.toString();\n      }\n\n      return option.label || option.toString();\n    },\n\n    // Helper method to convert hex color to rgba with opacity\n    hexToRgba(hex, opacity) {\n      const r = parseInt(hex.slice(1, 3), 16);\n      const g = parseInt(hex.slice(3, 5), 16);\n      const b = parseInt(hex.slice(5, 7), 16);\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    }\n  }\n}\n</script>\n\n<style>\n/* Global styles to remove scrollbars */\nhtml, body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n}\n\n/* Hide scrollbars for webkit browsers */\n::-webkit-scrollbar {\n  display: none;\n}\n\n/* Hide scrollbars for Firefox */\nhtml {\n  scrollbar-width: none;\n}\n</style>\n\n<style scoped>\n#plant-details {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n}\n\n/* Background container that covers the entire screen */\n.background-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n}\n\n/* Background image layer */\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n/* Gradient overlay */\n.gradient-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n/* Content container */\n.app-content {\n  position: relative;\n  z-index: 1;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  text-align: center;\n}\n\n.content {\n  width: 100%;\n  max-width: 1400px;\n  padding-top: 120px;\n}\n\n/* Main layout with left sidebar */\n.content-layout {\n  display: flex;\n  gap: 30px;\n  min-height: calc(100vh - 200px);\n  align-items: flex-start;\n}\n\n/* Parameters Section - Left Sidebar */\n.parameters-section {\n  width: 300px;\n  border-radius: 16px;\n  padding: 24px;\n  backdrop-filter: blur(30px);\n  position: fixed;\n  top: 180px;\n  left: 0px;\n\n}\n\n.parameters-title {\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  text-align: center;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.2);\n  padding-bottom: 12px;\n  opacity: 0.8;\n}\n\n\n.parameter-group {\n  margin-bottom: 20px;\n}\n\n.dropdown {\n  width: 70%;\n}\n\n.analyze-button,\n.reset-button {\n  width: 70%;\n  margin-top: 8px;\n}\n\n/* Main Content Area - Right Side */\n.main-content-area {\n  flex: 1;\n  min-height: 500px;\n}\n\n.content-header {\n  text-align: center;\n  margin-bottom: 40px;\n}\n\n.content-header .title {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.content-header .subtitle {\n  font-size: 32px;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  margin-top: 20px;\n}\n\n/* Status Area */\n.status-area {\n  height: 225px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  padding: 32px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  text-align: center;\n}\n\n.status-message {\n  margin-top: -30px;\n  color: white;\n}\n\n.status-message h3 {\n  font-size: 28px;\n  margin-bottom: 16px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.status-message p {\n  font-size: 18px;\n  line-height: 1.6;\n  opacity: 0.9;\n  margin-bottom: 20px;\n}\n\n.config-summary {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 20px;\n  margin: 20px 0;\n  text-align: left;\n}\n\n.config-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  font-size: 16px;\n}\n\n.config-item:last-child {\n  border-bottom: none;\n}\n\n.title {\n  color: white;\n  font-size: 64px;\n  margin-top: 200px;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n  font-weight: 700;\n}\n\n.subtitle {\n  color: white;\n  font-size: 60px;\n  margin-bottom: 10px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  font-weight: 500;\n}\n\n.back-button {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  padding: 12px 24px;\n  border-radius: 25px;\n  font-size: 18px;\n  cursor: pointer;\n  margin: 20px 0;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n}\n\n\n.plant-info {\n  margin-top: 40px;\n}\n\n.plant-description {\n  color: white;\n  font-size: 24px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  margin: 20px 0;\n}\n\n.details-content {\n  color: white;\n  font-size: 18px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: left;\n}\n\n.details-content ul {\n  margin: 20px 0;\n  padding-left: 20px;\n}\n\n.details-content li {\n  margin: 8px 0;\n  line-height: 1.5;\n}\n\n</style>"]}]}