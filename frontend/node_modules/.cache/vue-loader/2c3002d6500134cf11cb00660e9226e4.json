{"remainingRequest":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/components/ImageGrid.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/components/ImageGrid.vue","mtime":1751664651814},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1748892967032},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js","mtime":1748892967004},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1748892967032},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js","mtime":1748892968094}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW1hZ2VHcmlkJywKICBwcm9wczogewogICAgaW1hZ2VzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0sCiAgICBjb2x1bW5zOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNAogICAgfSwKICAgIGltYWdlU2l6ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDIwMAogICAgfSwKICAgIHNob3dMYWJlbHM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfQogIH0sCiAgCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3dMaWdodGJveDogZmFsc2UsCiAgICAgIGN1cnJlbnRJbmRleDogMAogICAgfTsKICB9LAogIAogIGNvbXB1dGVkOiB7CiAgICBjdXJyZW50SW1hZ2UoKSB7CiAgICAgIHJldHVybiB0aGlzLmltYWdlc1t0aGlzLmN1cnJlbnRJbmRleF07CiAgICB9CiAgfSwKICAKICBtZXRob2RzOiB7CiAgICBvcGVuTGlnaHRib3goaW5kZXgpIHsKICAgICAgdGhpcy5jdXJyZW50SW5kZXggPSBpbmRleDsKICAgICAgdGhpcy5zaG93TGlnaHRib3ggPSB0cnVlOwogICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7CiAgICB9LAogICAgCiAgICBjbG9zZUxpZ2h0Ym94KCkgewogICAgICB0aGlzLnNob3dMaWdodGJveCA9IGZhbHNlOwogICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nOwogICAgfSwKICAgIAogICAgcHJldmlvdXNJbWFnZSgpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudEluZGV4ID4gMCkgewogICAgICAgIHRoaXMuY3VycmVudEluZGV4LS07CiAgICAgIH0KICAgIH0sCiAgICAKICAgIG5leHRJbWFnZSgpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudEluZGV4IDwgdGhpcy5pbWFnZXMubGVuZ3RoIC0gMSkgewogICAgICAgIHRoaXMuY3VycmVudEluZGV4Kys7CiAgICAgIH0KICAgIH0sCiAgICAKICAgIGRvd25sb2FkSW1hZ2UodXJsLCBsYWJlbCkgewogICAgICBpZiAoIXVybCkgcmV0dXJuOwogICAgICAKICAgICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgYS5ocmVmID0gdXJsOwogICAgICBhLmRvd25sb2FkID0gbGFiZWwgPyBgJHtsYWJlbH0ucG5nYCA6IHVybC5zcGxpdCgnLycpLnBvcCgpOwogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICBhLmNsaWNrKCk7CiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYSk7CiAgICB9LAogICAgCiAgICAvLyBLZXlib2FyZCBuYXZpZ2F0aW9uCiAgICBoYW5kbGVLZXlkb3duKGV2ZW50KSB7CiAgICAgIGlmICghdGhpcy5zaG93TGlnaHRib3gpIHJldHVybjsKICAgICAgCiAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7CiAgICAgICAgY2FzZSAnRXNjYXBlJzoKICAgICAgICAgIHRoaXMuY2xvc2VMaWdodGJveCgpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnQXJyb3dMZWZ0JzoKICAgICAgICAgIHRoaXMucHJldmlvdXNJbWFnZSgpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnQXJyb3dSaWdodCc6CiAgICAgICAgICB0aGlzLm5leHRJbWFnZSgpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9LAogIAogIG1vdW50ZWQoKSB7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5oYW5kbGVLZXlkb3duKTsKICB9LAogIAogIGJlZm9yZVVubW91bnQoKSB7CiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5oYW5kbGVLZXlkb3duKTsKICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnYXV0byc7CiAgfQp9Owo="},{"version":3,"sources":["ImageGrid.vue"],"names":[],"mappings":";AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ImageGrid.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"image-grid-container\">\n    <!-- Image Grid -->\n    <div class=\"image-grid\" :style=\"{ gridTemplateColumns: `repeat(${columns}, 1fr)` }\">\n      <div \n        v-for=\"(image, index) in images\" \n        :key=\"index\" \n        class=\"image-item\"\n        @click=\"openLightbox(index)\"\n      >\n        <div class=\"image-wrapper\">\n          <img \n            :src=\"image.url\" \n            :alt=\"image.label || `Image ${index + 1}`\"\n            class=\"grid-image\"\n            :style=\"{ maxWidth: imageSize + 'px', maxHeight: imageSize + 'px' }\"\n          />\n          <div class=\"image-overlay\">\n            <div class=\"image-label\">{{ image.label || `Image ${index + 1}` }}</div>\n            <div class=\"image-actions\">\n              <button \n                class=\"action-btn download-btn\"\n                @click.stop=\"downloadImage(image.url, image.label)\"\n                title=\"Download Image\"\n              >\n                üì•\n              </button>\n              <button \n                class=\"action-btn zoom-btn\"\n                @click.stop=\"openLightbox(index)\"\n                title=\"Enlarge Image\"\n              >\n                üîç\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Lightbox Modal -->\n    <div v-if=\"showLightbox\" class=\"lightbox-overlay\" @click=\"closeLightbox\">\n      <div class=\"lightbox-content\" @click.stop>\n        <div class=\"lightbox-header\">\n          <h3>{{ currentImage?.label || `Image ${currentIndex + 1}` }}</h3>\n          <div class=\"lightbox-actions\">\n            <button \n              class=\"lightbox-btn\"\n              @click=\"downloadImage(currentImage?.url, currentImage?.label)\"\n              title=\"Download\"\n            >\n              üì•\n            </button>\n            <button \n              class=\"lightbox-btn close-btn\"\n              @click=\"closeLightbox\"\n              title=\"Close\"\n            >\n              ‚úï\n            </button>\n          </div>\n        </div>\n        <div class=\"lightbox-image-container\">\n          <button \n            v-if=\"images.length > 1\" \n            class=\"nav-btn prev-btn\"\n            @click=\"previousImage\"\n            :disabled=\"currentIndex === 0\"\n          >\n            ‚Äπ\n          </button>\n          <img \n            :src=\"currentImage?.url\" \n            :alt=\"currentImage?.label || `Image ${currentIndex + 1}`\"\n            class=\"lightbox-image\"\n          />\n          <button \n            v-if=\"images.length > 1\" \n            class=\"nav-btn next-btn\"\n            @click=\"nextImage\"\n            :disabled=\"currentIndex === images.length - 1\"\n          >\n            ‚Ä∫\n          </button>\n        </div>\n        <div v-if=\"images.length > 1\" class=\"lightbox-footer\">\n          <span class=\"image-counter\">{{ currentIndex + 1 }} / {{ images.length }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageGrid',\n  props: {\n    images: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    columns: {\n      type: Number,\n      default: 4\n    },\n    imageSize: {\n      type: Number,\n      default: 200\n    },\n    showLabels: {\n      type: Boolean,\n      default: true\n    }\n  },\n  \n  data() {\n    return {\n      showLightbox: false,\n      currentIndex: 0\n    };\n  },\n  \n  computed: {\n    currentImage() {\n      return this.images[this.currentIndex];\n    }\n  },\n  \n  methods: {\n    openLightbox(index) {\n      this.currentIndex = index;\n      this.showLightbox = true;\n      document.body.style.overflow = 'hidden';\n    },\n    \n    closeLightbox() {\n      this.showLightbox = false;\n      document.body.style.overflow = 'auto';\n    },\n    \n    previousImage() {\n      if (this.currentIndex > 0) {\n        this.currentIndex--;\n      }\n    },\n    \n    nextImage() {\n      if (this.currentIndex < this.images.length - 1) {\n        this.currentIndex++;\n      }\n    },\n    \n    downloadImage(url, label) {\n      if (!url) return;\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = label ? `${label}.png` : url.split('/').pop();\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    },\n    \n    // Keyboard navigation\n    handleKeydown(event) {\n      if (!this.showLightbox) return;\n      \n      switch (event.key) {\n        case 'Escape':\n          this.closeLightbox();\n          break;\n        case 'ArrowLeft':\n          this.previousImage();\n          break;\n        case 'ArrowRight':\n          this.nextImage();\n          break;\n      }\n    }\n  },\n  \n  mounted() {\n    document.addEventListener('keydown', this.handleKeydown);\n  },\n  \n  beforeUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n    document.body.style.overflow = 'auto';\n  }\n};\n</script>\n\n<style scoped>\n.image-grid-container {\n  width: 100%;\n}\n\n.image-grid {\n  display: grid;\n  gap: 16px;\n  padding: 16px;\n}\n\n.image-item {\n  position: relative;\n  cursor: pointer;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.image-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n}\n\n.image-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.grid-image {\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 8px;\n  transition: filter 0.2s ease;\n}\n\n.image-item:hover .grid-image {\n  filter: brightness(0.8);\n}\n\n.image-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 12px;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n  border-radius: 8px;\n}\n\n.image-item:hover .image-overlay {\n  opacity: 1;\n}\n\n.image-label {\n  color: white;\n  font-weight: 600;\n  font-size: 14px;\n  text-align: center;\n  margin-bottom: 8px;\n}\n\n.image-actions {\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n}\n\n.action-btn {\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 4px;\n  padding: 6px 8px;\n  cursor: pointer;\n  color: white;\n  font-size: 14px;\n  transition: background 0.2s ease;\n}\n\n.action-btn:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n/* Lightbox Styles */\n.lightbox-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n  padding: 20px;\n}\n\n.lightbox-content {\n  background: white;\n  border-radius: 12px;\n  max-width: 90vw;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.lightbox-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 20px;\n  border-bottom: 1px solid #eee;\n  background: #f8f9fa;\n}\n\n.lightbox-header h3 {\n  margin: 0;\n  color: #333;\n  font-size: 18px;\n}\n\n.lightbox-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.lightbox-btn {\n  background: none;\n  border: none;\n  padding: 8px;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: background 0.2s ease;\n}\n\n.lightbox-btn:hover {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n.close-btn {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.lightbox-image-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  min-height: 400px;\n}\n\n.lightbox-image {\n  max-width: 100%;\n  max-height: 70vh;\n  object-fit: contain;\n}\n\n.nav-btn {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  background: rgba(0, 0, 0, 0.5);\n  border: none;\n  color: white;\n  padding: 12px 16px;\n  cursor: pointer;\n  border-radius: 50%;\n  font-size: 24px;\n  transition: background 0.2s ease;\n}\n\n.nav-btn:hover:not(:disabled) {\n  background: rgba(0, 0, 0, 0.7);\n}\n\n.nav-btn:disabled {\n  opacity: 0.3;\n  cursor: not-allowed;\n}\n\n.prev-btn {\n  left: 20px;\n}\n\n.next-btn {\n  right: 20px;\n}\n\n.lightbox-footer {\n  padding: 12px 20px;\n  text-align: center;\n  border-top: 1px solid #eee;\n  background: #f8f9fa;\n}\n\n.image-counter {\n  color: #666;\n  font-size: 14px;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .image-grid {\n    grid-template-columns: repeat(2, 1fr) !important;\n    gap: 12px;\n    padding: 12px;\n  }\n  \n  .lightbox-content {\n    max-width: 95vw;\n    max-height: 95vh;\n  }\n  \n  .lightbox-image-container {\n    padding: 10px;\n    min-height: 300px;\n  }\n  \n  .nav-btn {\n    padding: 8px 12px;\n    font-size: 20px;\n  }\n  \n  .prev-btn {\n    left: 10px;\n  }\n  \n  .next-btn {\n    right: 10px;\n  }\n}\n\n@media (max-width: 480px) {\n  .image-grid {\n    grid-template-columns: 1fr !important;\n  }\n}\n</style> "]}]}