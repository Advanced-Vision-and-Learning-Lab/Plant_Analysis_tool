{"remainingRequest":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/components/AnalysisResults.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/src/components/AnalysisResults.vue","mtime":1752110619763},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1748892967032},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/babel-loader/lib/index.js","mtime":1748892967004},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1748892967032},{"path":"/home/grads/n/nazaro/Desktop/Github_repo/Plant_Analysis_tool/frontend/node_modules/vue-loader/lib/index.js","mtime":1748892968094}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBJbWFnZUdyaWQgZnJvbSAnLi9JbWFnZUdyaWQudnVlJwovLyBpbXBvcnQgU2VhcmNoYWJsZVRhYmxlIGZyb20gJy4vU2VhcmNoYWJsZVRhYmxlLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQW5hbHlzaXNSZXN1bHRzJywKICBjb21wb25lbnRzOiB7CiAgICBJbWFnZUdyaWQKICAgIC8vIFNlYXJjaGFibGVUYWJsZQogIH0sCiAgcHJvcHM6IHsKICAgIC8vIEJhc2ljIHByb3BzCiAgICBwbGFudE5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIAogICAgcGxhbnRJZDogewogICAgICB0eXBlOiBbU3RyaW5nLCBPYmplY3RdLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgCiAgICBhbmFseXNpc0RhdGU6IHsKICAgICAgdHlwZTogW1N0cmluZywgT2JqZWN0XSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIAogICAgLy8gUmVzdWx0cyBkYXRhCiAgICByZXN1bHRzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIAogICAgLy8gQ29uZmlndXJhdGlvbgogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnQW5hbHlzaXMgUmVzdWx0cycKICAgIH0sCiAgICAKICAgIHNob3dTdGF0dXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIAogICAgc2hvd0NoYXJ0czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9CiAgfSwKICAKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJvY2Vzc2luZ1RpbWU6IDIuMywKICAgICAgYWN0aXZlVGFiOiAwLAogICAgICAKICAgICAgLy8gVGFiIGRlZmluaXRpb25zCiAgICAgIHRhYnM6IFsKICAgICAgICB7IGxhYmVsOiAnSW1hZ2VzJywga2V5OiAnaW1hZ2VzJyB9LAogICAgICAgIHsgbGFiZWw6ICdUZXh0dXJlIEltYWdlcycsIGtleTogJ3RleHR1cmUtaW1hZ2VzJyB9LAogICAgICAgIHsgbGFiZWw6ICdWZWdldGF0aW9uIEluZGljZXMgSW1hZ2VzJywga2V5OiAndmVnLWluZGljZXMtaW1hZ2VzJyB9LAogICAgICAgIHsgbGFiZWw6ICdWZWdldGF0aW9uIEluZGljZXMgVGFibGUnLCBrZXk6ICd2ZWctaW5kaWNlcy10YWJsZScgfSwKICAgICAgICB7IGxhYmVsOiAnVGV4dHVyZSBGZWF0dXJlcyBUYWJsZScsIGtleTogJ3RleHR1cmUtZmVhdHVyZXMtdGFibGUnIH0sCiAgICAgICAgeyBsYWJlbDogJ01vcnBob2xvZ2ljYWwgRmVhdHVyZXMgVGFibGUnLCBrZXk6ICdtb3JwaG9sb2dpY2FsLWZlYXR1cmVzLXRhYmxlJyB9CiAgICAgIF0KICAgIH07CiAgfSwKICAKICBjb21wdXRlZDogewogICAgc3RhdHVzVGV4dCgpIHsKICAgICAgaWYgKHRoaXMucmVzdWx0cykgcmV0dXJuICdDb21wbGV0ZSc7CiAgICAgIHJldHVybiAnTm8gUmVzdWx0cyc7CiAgICB9LAogICAgCiAgICBzdGF0dXNDbGFzcygpIHsKICAgICAgaWYgKHRoaXMucmVzdWx0cykgcmV0dXJuICdzdGF0dXMtY29tcGxldGUnOwogICAgICByZXR1cm4gJ3N0YXR1cy1uby1yZXN1bHRzJzsKICAgIH0sCiAgICAKICAgIG1haW5JbWFnZXMoKSB7CiAgICAgIGlmICghdGhpcy5yZXN1bHRzKSB7CiAgICAgICAgY29uc29sZS5sb2coJ21haW5JbWFnZXM6IG5vIHJlc3VsdHMgb2JqZWN0Jyk7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICAgIGNvbnN0IGtleXMgPSBbJ29yaWdpbmFsJywgJ21hc2snLCAnb3ZlcmxheScsICdzZWdtZW50ZWQnXTsKICAgICAgY29uc3QgaW1hZ2VzID0ga2V5cy5maWx0ZXIoayA9PiB0aGlzLnJlc3VsdHNba10pLm1hcChrID0+ICh7IGxhYmVsOiB0aGlzLmNhcGl0YWxpemUoayksIGtleTogaywgdXJsOiB0aGlzLnJlc3VsdHNba10gfSkpOwogICAgICBjb25zb2xlLmxvZygnbWFpbkltYWdlcyBjb21wdXRlZCAtIHJlc3VsdHM6JywgdGhpcy5yZXN1bHRzKTsKICAgICAgaWYgKGltYWdlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgY29uc29sZS5sb2coYG1haW5JbWFnZXM6IGZvdW5kICR7aW1hZ2VzLmxlbmd0aH0gaW1hZ2VzYCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5sb2coJ21haW5JbWFnZXM6IG5vIGltYWdlcyBmb3VuZCcpOwogICAgICB9CiAgICAgIHJldHVybiBpbWFnZXM7CiAgICB9LAogICAgCiAgICB0ZXh0dXJlSW1hZ2VzKCkgewogICAgICBpZiAoIXRoaXMucmVzdWx0cykgcmV0dXJuIFtdOwogICAgICAKICAgICAgY29uc3QgdGV4dHVyZUtleXMgPSBbCiAgICAgICAgJ2NvbG9yX29yaWdpbmFsJywgJ2NvbG9yX2dyYXlzY2FsZScsICdjb2xvcl9sYnAnLCAnY29sb3JfaG9nJywgJ2NvbG9yX2xhYzEnLCAnY29sb3JfbGFjMicsICdjb2xvcl9sYWMzJywgJ2NvbG9yX2VoZCcsCiAgICAgICAgJ2dyZWVuX29yaWdpbmFsJywgJ2dyZWVuX2dyYXlzY2FsZScsICdncmVlbl9sYnAnLCAnZ3JlZW5faG9nJywKICAgICAgICAnbmlyX29yaWdpbmFsJywgJ25pcl9ncmF5c2NhbGUnLCAnbmlyX2xicCcsICduaXJfaG9nJwogICAgICBdOwogICAgICAKICAgICAgcmV0dXJuIHRleHR1cmVLZXlzCiAgICAgICAgLmZpbHRlcihrZXkgPT4gdGhpcy5yZXN1bHRzW2tleV0pCiAgICAgICAgLm1hcChrZXkgPT4gKHsKICAgICAgICAgIGxhYmVsOiBrZXkucmVwbGFjZSgvXy9nLCAnICcpLnJlcGxhY2UoL1xiXHcvZywgbCA9PiBsLnRvVXBwZXJDYXNlKCkpLAogICAgICAgICAgdXJsOiB0aGlzLnJlc3VsdHNba2V5XQogICAgICAgIH0pKTsKICAgIH0sCiAgICAKICAgIHZlZ2V0YXRpb25JbmRpY2VzSW1hZ2VzKCkgewogICAgICBpZiAoIXRoaXMucmVzdWx0cykgcmV0dXJuIFtdOwogICAgICAKICAgICAgY29uc3QgdmVnSW5kZXhLZXlzID0gWwogICAgICAgICduZHZpJywgJ2duZHZpJywgJ2V2aTInLCAnbmRyZScsICduZHdpJywgJ25ncmRpJywgJ2FyaScsICdhcmkyJywgJ2F2aScsICdjY2NpJywgCiAgICAgICAgJ2NpZ3JlZW4nLCAnY2lyZScsICdjdmknLCAnZHN3aTQnLCAnZHZpJywgJ2V4cicsICdnZW1pJywgJ2dvc2F2aScsICdncm5kdmknLCAKICAgICAgICAnZ3J2aScsICdnc2F2aScsICdpcHZpJywgJ2xjaScsICdtY2FyaScsICdtY2FyaTEnLCAnbWNhcmkyJywgJ21ncnZpJywgJ21zYXZpJywgCiAgICAgICAgJ21zcicsICdtdHZpMScsICdtdHZpMicsICdubGknLCAnb3NhdmknLCAncHZpJywgJ3JkdmknLCAncmknLCAncnJpMScsICdzaXBpMicsIAogICAgICAgICdzcicsICd0Y2FyaScsICd0Y2FyaW9zYXZpJywgJ3RuZHZpJywgJ3RzYXZpJywgJ3dkdmknCiAgICAgIF07CiAgICAgIAogICAgICByZXR1cm4gdmVnSW5kZXhLZXlzCiAgICAgICAgLmZpbHRlcihrZXkgPT4gdGhpcy5yZXN1bHRzW2B2ZWdldGF0aW9uX2luZGljZXNfJHtrZXl9YF0pCiAgICAgICAgLm1hcChrZXkgPT4gKHsKICAgICAgICAgIGxhYmVsOiBrZXkudG9VcHBlckNhc2UoKSwKICAgICAgICAgIHVybDogdGhpcy5yZXN1bHRzW2B2ZWdldGF0aW9uX2luZGljZXNfJHtrZXl9YF0KICAgICAgICB9KSk7CiAgICB9CiAgfSwKICAKICBtZXRob2RzOiB7CiAgICBnZXREaXNwbGF5VGV4dChvcHRpb24pIHsKICAgICAgaWYgKCFvcHRpb24pIHJldHVybiAnJzsKICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBvcHRpb24gPT09ICdudW1iZXInKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbi50b1N0cmluZygpOwogICAgICB9CiAgICAgIHJldHVybiBvcHRpb24ubGFiZWwgfHwgb3B0aW9uLnRvU3RyaW5nKCk7CiAgICB9LAogICAgY2FwaXRhbGl6ZShzKSB7CiAgICAgIHJldHVybiBzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcy5zbGljZSgxKTsKICAgIH0KICB9LAogIAogIGVtaXRzOiBbJ2V4cG9ydCcsICdzaGFyZSddCn0K"},{"version":3,"sources":["AnalysisResults.vue"],"names":[],"mappings":";AAqfile":"AnalysisResults.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"analysis-results\">\n    <!-- Header -->\n    <div class=\"results-header\">\n      <h3 class=\"results-title\">{{ title }}</h3>\n      <div v-if=\"showStatus\" class=\"analysis-status\" :class=\"statusClass\">\n        {{ statusText }}\n      </div>\n    </div>\n\n    <!-- Content based on results state -->\n    <div class=\"results-content\">\n      <!-- No results state -->\n      <div v-if=\"!results\" class=\"no-results\">\n        <div class=\"no-results-message\">\n          <h4>No Results Available</h4>\n          <p>Please run an analysis to see results here.</p>\n        </div>\n      </div>\n\n      <!-- Results available - show with tabs -->\n      <div v-else class=\"results-available\">\n        <!-- Results Summary -->\n        <div class=\"results-summary\">\n          <h2>Analysis Summary</h2>\n          <div class=\"summary-grid\">\n            <div class=\"summary-item\">\n              <span class=\"summary-label\">Plant Type:</span>\n              <span class=\"summary-value\">{{ plantName }}</span>\n            </div>\n            <div class=\"summary-item\">\n              <span class=\"summary-label\">Plant ID:</span>\n              <span class=\"summary-value\">{{ getDisplayText(plantId) }}</span>\n            </div>\n            <div class=\"summary-item\">\n              <span class=\"summary-label\">Analysis Date:</span>\n              <span class=\"summary-value\">{{ getDisplayText(analysisDate) }}</span>\n            </div>\n            <div class=\"summary-item\">\n              <span class=\"summary-label\">Processing Time:</span>\n              <span class=\"summary-value\">{{ processingTime }}s</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Tabs Navigation -->\n        <div class=\"tabs-container\">\n          <div class=\"tabs-header\">\n            <button\n              v-for=\"(tab, index) in tabs\"\n              :key=\"index\"\n              class=\"tab-button\"\n              :class=\"{ active: activeTab === index }\"\n              @click=\"activeTab = index\"\n            >\n              {{ tab.label }}\n            </button>\n          </div>\n\n          <!-- Tab Content -->\n          <div class=\"tab-content\">\n            <!-- Images Tab -->\n            <div v-if=\"activeTab === 0\" class=\"tab-panel\">\n              <div v-if=\"mainImages.length\">\n                <div class=\"image-grid\">\n                  <div v-for=\"img in mainImages\" :key=\"img.label\" class=\"image-item\">\n                    <h4>{{ img.label }}</h4>\n                    <img :src=\"img.url\" :alt=\"img.label\" class=\"result-image\" />\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"no-images-message\">\n                <h4>No Images Available</h4>\n                <p>No images were found in the analysis results.</p>\n                <p><strong>Debug Info:</strong> Plant ID: {{ getDisplayText(plantId) }}, Date: {{ getDisplayText(analysisDate) }}</p>\n              </div>\n            </div>\n\n            <!-- Texture Images Tab -->\n            <div v-else-if=\"activeTab === 1\" class=\"tab-panel\">\n              <ImageGrid \n                :images=\"textureImages\"\n                :columns=\"3\"\n                :image-size=\"280\"\n              />\n            </div>\n\n            <!-- Vegetation Indices Images Tab -->\n            <div v-else-if=\"activeTab === 2\" class=\"tab-panel\">\n              <ImageGrid \n                :images=\"vegetationIndicesImages\"\n                :columns=\"4\"\n                :image-size=\"200\"\n              />\n            </div>\n\n            <!-- Vegetation Indices Table Tab -->\n            <div v-else-if=\"activeTab === 3\" class=\"tab-panel\">\n              <!-- <SearchableTable\n                :headers=\"vegetationIndicesHeaders\"\n                :items=\"vegetationIndicesData\"\n                search-placeholder=\"Search vegetation indices...\"\n                default-sort=\"index\"\n              /> -->\n            </div>\n\n            <!-- Texture Features Table Tab -->\n            <div v-else-if=\"activeTab === 4\" class=\"tab-panel\">\n              <!-- <SearchableTable\n                :headers=\"textureFeaturesHeaders\"\n                :items=\"textureFeaturesData\"\n                search-placeholder=\"Search texture features...\"\n                default-sort=\"feature\"\n              /> -->\n            </div>\n\n            <!-- Morphological Features Table Tab -->\n            <div v-else-if=\"activeTab === 5\" class=\"tab-panel\">\n              <!-- <SearchableTable\n                :headers=\"morphologicalFeaturesHeaders\"\n                :items=\"morphologicalFeaturesData\"\n                search-placeholder=\"Search morphological features...\"\n                default-sort=\"feature\"\n              /> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ImageGrid from './ImageGrid.vue'\n// import SearchableTable from './SearchableTable.vue'\n\nexport default {\n  name: 'AnalysisResults',\n  components: {\n    ImageGrid\n    // SearchableTable\n  },\n  props: {\n    // Basic props\n    plantName: {\n      type: String,\n      required: true\n    },\n    \n    plantId: {\n      type: [String, Object],\n      default: null\n    },\n    \n    analysisDate: {\n      type: [String, Object],\n      default: null\n    },\n    \n    // Results data\n    results: {\n      type: Object,\n      default: null\n    },\n    \n    // Configuration\n    title: {\n      type: String,\n      default: 'Analysis Results'\n    },\n    \n    showStatus: {\n      type: Boolean,\n      default: true\n    },\n    \n    showCharts: {\n      type: Boolean,\n      default: true\n    }\n  },\n  \n  data() {\n    return {\n      processingTime: 2.3,\n      activeTab: 0,\n      \n      // Tab definitions\n      tabs: [\n        { label: 'Images', key: 'images' },\n        { label: 'Texture Images', key: 'texture-images' },\n        { label: 'Vegetation Indices Images', key: 'veg-indices-images' },\n        { label: 'Vegetation Indices Table', key: 'veg-indices-table' },\n        { label: 'Texture Features Table', key: 'texture-features-table' },\n        { label: 'Morphological Features Table', key: 'morphological-features-table' }\n      ]\n    };\n  },\n  \n  computed: {\n    statusText() {\n      if (this.results) return 'Complete';\n      return 'No Results';\n    },\n    \n    statusClass() {\n      if (this.results) return 'status-complete';\n      return 'status-no-results';\n    },\n    \n    mainImages() {\n      if (!this.results) {\n        console.log('mainImages: no results object');\n        return [];\n      }\n      const keys = ['original', 'mask', 'overlay', 'segmented'];\n      const images = keys.filter(k => this.results[k]).map(k => ({ label: this.capitalize(k), key: k, url: this.results[k] }));\n      console.log('mainImages computed - results:', this.results);\n      if (images.length > 0) {\n        console.log(`mainImages: found ${images.length} images`);\n      } else {\n        console.log('mainImages: no images found');\n      }\n      return images;\n    },\n    \n    textureImages() {\n      if (!this.results) return [];\n      \n      const textureKeys = [\n        'color_original', 'color_grayscale', 'color_lbp', 'color_hog', 'color_lac1', 'color_lac2', 'color_lac3', 'color_ehd',\n        'green_original', 'green_grayscale', 'green_lbp', 'green_hog',\n        'nir_original', 'nir_grayscale', 'nir_lbp', 'nir_hog'\n      ];\n      \n      return textureKeys\n        .filter(key => this.results[key])\n        .map(key => ({\n          label: key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n          url: this.results[key]\n        }));\n    },\n    \n    vegetationIndicesImages() {\n      if (!this.results) return [];\n      \n      const vegIndexKeys = [\n        'ndvi', 'gndvi', 'evi2', 'ndre', 'ndwi', 'ngrdi', 'ari', 'ari2', 'avi', 'ccci', \n        'cigreen', 'cire', 'cvi', 'dswi4', 'dvi', 'exr', 'gemi', 'gosavi', 'grndvi', \n        'grvi', 'gsavi', 'ipvi', 'lci', 'mcari', 'mcari1', 'mcari2', 'mgrvi', 'msavi', \n        'msr', 'mtvi1', 'mtvi2', 'nli', 'osavi', 'pvi', 'rdvi', 'ri', 'rri1', 'sipi2', \n        'sr', 'tcari', 'tcariosavi', 'tndvi', 'tsavi', 'wdvi'\n      ];\n      \n      return vegIndexKeys\n        .filter(key => this.results[`vegetation_indices_${key}`])\n        .map(key => ({\n          label: key.toUpperCase(),\n          url: this.results[`vegetation_indices_${key}`]\n        }));\n    }\n  },\n  \n  methods: {\n    getDisplayText(option) {\n      if (!option) return '';\n      if (typeof option === 'string' || typeof option === 'number') {\n        return option.toString();\n      }\n      return option.label || option.toString();\n    },\n    capitalize(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n  },\n  \n  emits: ['export', 'share']\n}\n</script>\n\n<style scoped>\n.analysis-results {\n  padding: 24px;\n  position: fixed;\n  top: 200px;\n  left: 380px;\n  width: 77%;\n  height: 73%;\n  backdrop-filter: blur(30px);\n  border-radius: 16px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* Custom scrollbar styles for the results area */\n.analysis-results ::-webkit-scrollbar {\n  width: 8px;\n}\n\n.analysis-results ::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n}\n\n.analysis-results ::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 4px;\n  transition: background 0.3s ease;\n}\n\n.analysis-results ::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.5);\n}\n\n.analysis-results ::-webkit-scrollbar-corner {\n  background: transparent;\n}\n\n.results-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.1);\n  flex-shrink: 0;\n}\n\n.results-title {\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.results-content {\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-right: 8px;\n  margin-right: -8px;\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1);\n}\n\n.analysis-status {\n  padding: 6px 12px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.status-complete {\n  background: rgba(34, 197, 94, 0.2);\n  color: #4ade80;\n  border: 1px solid rgba(34, 197, 94, 0.3);\n}\n\n.status-no-results {\n  background: rgba(107, 114, 128, 0.2);\n  color: #9ca3af;\n  border: 1px solid rgba(107, 114, 128, 0.3);\n}\n\n/* No results state */\n.no-results {\n  text-align: center;\n  padding: 40px 20px;\n}\n\n.no-results-message h4 {\n  color: white;\n  font-size: 20px;\n  margin-bottom: 16px;\n}\n\n.no-results-message p {\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 16px;\n}\n\n/* Results available */\n.results-available {\n  padding-bottom: 20px;\n}\n\n.results-available > div {\n  margin-bottom: 32px;\n}\n\n.results-available h4 {\n  color: white;\n  font-size: 18px;\n  margin-bottom: 16px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n.results-summary {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 12px;\n  padding: 20px;\n}\n\n.summary-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n}\n\n.summary-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  color: white;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.summary-label {\n  font-weight: 500;\n}\n\n/* Tabs Styles */\n.tabs-container {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n.tabs-header {\n  display: flex;\n  background: rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  overflow-x: auto;\n}\n\n.tab-button {\n  padding: 12px 20px;\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.7);\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  white-space: nowrap;\n  transition: all 0.2s ease;\n  border-bottom: 2px solid transparent;\n}\n\n.tab-button:hover {\n  color: white;\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.tab-button.active {\n  color: white;\n  background: rgba(255, 255, 255, 0.1);\n  border-bottom-color: #4ade80;\n}\n\n.tab-content {\n  padding: 20px;\n}\n\n.tab-panel {\n  min-height: 400px;\n}\n\n/* Image grid styles */\n.image-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.image-item {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.image-item h4 {\n  color: white;\n  margin-bottom: 12px;\n  font-size: 16px;\n}\n\n.result-image {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.no-images-message {\n  text-align: center;\n  padding: 40px 20px;\n  color: white;\n}\n\n.no-images-message h4 {\n  font-size: 20px;\n  margin-bottom: 16px;\n  color: #fbbf24;\n}\n\n.no-images-message p {\n  margin-bottom: 12px;\n  line-height: 1.5;\n}\n\n.no-images-message strong {\n  color: #4ade80;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .summary-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .tabs-header {\n    flex-wrap: wrap;\n  }\n  \n  .tab-button {\n    flex: 1;\n    min-width: 120px;\n    text-align: center;\n  }\n  \n  .tab-content {\n    padding: 16px;\n  }\n}\n</style>\n"]}]}