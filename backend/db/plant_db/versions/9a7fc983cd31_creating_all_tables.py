"""Creating all tables

Revision ID: 9a7fc983cd31
Revises: 
Create Date: 2025-07-28 14:05:34.367656

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a7fc983cd31'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plants',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('species', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plants_id'), 'plants', ['id'], unique=False)
    op.create_table('processed_data',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('plant_id', sa.String(length=50), nullable=False),
    sa.Column('image_key', sa.String(length=255), nullable=True),
    sa.Column('date_processed', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_captured', sa.Date(), nullable=False),
    sa.Column('vegetation_features', sa.JSON(), nullable=True),
    sa.Column('morphology_features', sa.JSON(), nullable=True),
    sa.Column('texture_features', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'date_captured', name='_unique_plant_image_per_day')
    )
    op.create_index(op.f('ix_processed_data_id'), 'processed_data', ['id'], unique=False)
    op.create_index(op.f('ix_processed_data_plant_id'), 'processed_data', ['plant_id'], unique=False)
    op.create_table('texture_timeline',
    sa.Column('plant_id', sa.String(length=50), nullable=False),
    sa.Column('date_captured', sa.Date(), nullable=False),
    sa.Column('band_name', sa.String(length=20), nullable=False),
    sa.Column('texture_type', sa.String(length=20), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('median', sa.Float(), nullable=False),
    sa.Column('std', sa.Float(), nullable=False),
    sa.Column('q25', sa.Float(), nullable=False),
    sa.Column('q75', sa.Float(), nullable=False),
    sa.Column('min', sa.Float(), nullable=False),
    sa.Column('max', sa.Float(), nullable=False),
    sa.Column('texture_image_key', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.PrimaryKeyConstraint('plant_id', 'date_captured', 'band_name', 'texture_type')
    )
    op.create_table('vegetation_index_timeline',
    sa.Column('plant_id', sa.String(length=50), nullable=False),
    sa.Column('date_captured', sa.Date(), nullable=False),
    sa.Column('index_type', sa.String(length=20), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('median', sa.Float(), nullable=False),
    sa.Column('std', sa.Float(), nullable=False),
    sa.Column('q25', sa.Float(), nullable=False),
    sa.Column('q75', sa.Float(), nullable=False),
    sa.Column('min', sa.Float(), nullable=False),
    sa.Column('max', sa.Float(), nullable=False),
    sa.Column('index_image_key', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.PrimaryKeyConstraint('plant_id', 'date_captured', 'index_type')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vegetation_index_timeline')
    op.drop_table('texture_timeline')
    op.drop_index(op.f('ix_processed_data_plant_id'), table_name='processed_data')
    op.drop_index(op.f('ix_processed_data_id'), table_name='processed_data')
    op.drop_table('processed_data')
    op.drop_index(op.f('ix_plants_id'), table_name='plants')
    op.drop_table('plants')
    # ### end Alembic commands ###
